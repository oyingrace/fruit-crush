"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_pnpm_thirdweb_5_105_41__hey-api_openapi-ts_0_82_4_typescript_-e117ed"],{

/***/ "(app-pages-browser)/./node_modules/.pnpm/thirdweb@5.105.41_@hey-api+openapi-ts@0.82.4_typescript@5.9.2__@types+react-dom@18.3.7__e1a4416e7a5fc1376f0fbb1403784ce8/node_modules/thirdweb/dist/esm/bridge/Status.js":
/*!*****************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/thirdweb@5.105.41_@hey-api+openapi-ts@0.82.4_typescript@5.9.2__@types+react-dom@18.3.7__e1a4416e7a5fc1376f0fbb1403784ce8/node_modules/thirdweb/dist/esm/bridge/Status.js ***!
  \*****************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   status: function() { return /* binding */ status; }\n/* harmony export */ });\n/* harmony import */ var _utils_domains_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/domains.js */ \"(app-pages-browser)/./node_modules/.pnpm/thirdweb@5.105.41_@hey-api+openapi-ts@0.82.4_typescript@5.9.2__@types+react-dom@18.3.7__e1a4416e7a5fc1376f0fbb1403784ce8/node_modules/thirdweb/dist/esm/utils/domains.js\");\n/* harmony import */ var _utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/fetch.js */ \"(app-pages-browser)/./node_modules/.pnpm/thirdweb@5.105.41_@hey-api+openapi-ts@0.82.4_typescript@5.9.2__@types+react-dom@18.3.7__e1a4416e7a5fc1376f0fbb1403784ce8/node_modules/thirdweb/dist/esm/utils/fetch.js\");\n/* harmony import */ var _types_Errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types/Errors.js */ \"(app-pages-browser)/./node_modules/.pnpm/thirdweb@5.105.41_@hey-api+openapi-ts@0.82.4_typescript@5.9.2__@types+react-dom@18.3.7__e1a4416e7a5fc1376f0fbb1403784ce8/node_modules/thirdweb/dist/esm/bridge/types/Errors.js\");\n\n\n\n/**\n * Retrieves a Universal Bridge quote for the provided sell intent. The quote will specify the expected `destinationAmount` that will be received in exchange for the specified `originAmount`, which is specified with the `sellAmountWei` option.\n *\n * The returned status will include both the origin and destination transactions and any finalized amounts for the route.\n *\n * @example\n * ```typescript\n * import { Bridge } from \"thirdweb\";\n *\n * const status = await Bridge.status({\n *   transactionHash: \"0xe199ef82a0b6215221536e18ec512813c1aa10b4f5ed0d4dfdfcd703578da56d\",\n *   chainId: 8453,\n *   client: thirdwebClient,\n * });\n * ```\n *\n * If the transaction is complete, a response might look like:\n * ```typescript\n * {\n *   status: 'COMPLETED',\n *   originAmount: 200000000000000n,\n *   destinationAmount: 188625148000000n,\n *   originChainId: 8453,\n *   destinationChainId: 2741,\n *   originTokenAddress: '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',\n *   destinationTokenAddress: '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',\n *   transactions: [\n *     {\n *       chainId: 8453,\n *       transactionHash: '0xe199ef82a0b6215221536e18ec512813c1aa10b4f5ed0d4dfdfcd703578da56d'\n *     },\n *     {\n *       chainId: 2741,\n *       transactionHash: '0xa70a82f42330f54be95a542e1fcfe6ed2dd9f07fb8c82ae67afb4342319f7433'\n *     }\n *   ],\n *   purchaseData: {\n *     foo: \"bar\"\n *   }\n * }\n * ```\n *\n * If the origin transaction hasn't been mined yet, a response might look like:\n * ```typescript\n * {\n *   status: \"NOT_FOUND\",\n * }\n * ```\n * This is to allow you to poll for the status without catching an error. Be sure your transaction hash and chain are correct though, as this could also represent a legitimate 404 if the transaction doesn't exist.\n *\n * If the transaction is still pending, a response might look like:\n * ```typescript\n * {\n *   status: \"PENDING\",\n *   originAmount: 1000000000000000000n,\n *   originChainId: 466,\n *   destinationChainId: 1,\n *   originTokenAddress: \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\",\n *   destinationTokenAddress: \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\",\n *   transactions: [\n *     {\n *       transactionHash: \"0xe199ef82a0b6215221536e18ec512813c1aa10b4f5ed0d4dfdfcd703578da56d\",\n *       chainId: 466,\n *     }\n *   ]\n * }\n * ```\n *\n * If the transaction failed, a response might look like:\n * ```typescript\n * {\n *   status: \"FAILED\",\n *   transactions: [\n *     {\n *       transactionHash: \"0xe199ef82a0b6215221536e18ec512813c1aa10b4f5ed0d4dfdfcd703578da56d\",\n *       chainId: 466,\n *     }\n *   ]\n * }\n * ```\n *\n * This status is for a **single origin transaction only**. If your route involves multiple transactions, you'll need to get the status for each of them individually.\n *\n * If sending multiple dependent sequential transactions, wait until `status` returns `COMPLETED` before sending the next transaction.\n *\n * You can access this function's input and output types with `status.Options` and `status.Result`, respectively.\n *\n * @param options - The options for the quote.\n * @param options.transactionHash - The hash of the origin transaction to get the bridge status for.\n * @param options.chainId - The chain ID of the origin token.\n * @param options.transactionId - The transaction ID received from the `prepare` request.\n * @param options.client - Your thirdweb client.\n *\n * @returns A promise that resolves to a status object for the transaction.\n *\n * @throws Will throw an error if there is an issue fetching the status.\n * @bridge\n * @beta\n */\nasync function status(options) {\n    const { transactionHash, client, transactionId } = options;\n    const chainId = \"chainId\" in options ? options.chainId : options.chain.id;\n    const clientFetch = (0,_utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__.getClientFetch)(client);\n    const url = new URL(`${(0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_1__.getThirdwebBaseUrl)(\"bridge\")}/v1/status`);\n    url.searchParams.set(\"transactionHash\", transactionHash);\n    url.searchParams.set(\"chainId\", chainId.toString());\n    if (transactionId) {\n        url.searchParams.set(\"transactionId\", transactionId);\n    }\n    const response = await clientFetch(url.toString());\n    if (!response.ok) {\n        const errorJson = await response.json();\n        throw new _types_Errors_js__WEBPACK_IMPORTED_MODULE_2__.ApiError({\n            code: errorJson.code || \"UNKNOWN_ERROR\",\n            correlationId: errorJson.correlationId || undefined,\n            message: errorJson.message || response.statusText,\n            statusCode: response.status,\n        });\n    }\n    const { data } = await response.json();\n    if (data.status === \"FAILED\") {\n        return {\n            paymentId: data.paymentId,\n            status: \"FAILED\",\n            transactions: data.transactions,\n        };\n    }\n    if (data.status === \"PENDING\") {\n        return {\n            destinationChainId: data.destinationChainId,\n            destinationToken: data.destinationToken,\n            destinationTokenAddress: data.destinationTokenAddress,\n            originAmount: BigInt(data.originAmount),\n            originChainId: data.originChainId,\n            originToken: data.originToken,\n            originTokenAddress: data.originTokenAddress,\n            paymentId: data.paymentId,\n            purchaseData: data.purchaseData,\n            receiver: data.receiver,\n            sender: data.sender,\n            status: \"PENDING\",\n            transactions: data.transactions,\n        };\n    }\n    if (data.status === \"NOT_FOUND\") {\n        return {\n            paymentId: data.paymentId,\n            status: \"NOT_FOUND\",\n            transactions: [],\n        };\n    }\n    return {\n        destinationAmount: BigInt(data.destinationAmount),\n        destinationChainId: data.destinationChainId,\n        destinationToken: data.destinationToken,\n        destinationTokenAddress: data.destinationTokenAddress,\n        originAmount: BigInt(data.originAmount),\n        originChainId: data.originChainId,\n        originToken: data.originToken,\n        originTokenAddress: data.originTokenAddress,\n        paymentId: data.paymentId,\n        purchaseData: data.purchaseData,\n        receiver: data.receiver,\n        sender: data.sender,\n        status: \"COMPLETED\",\n        transactions: data.transactions,\n    };\n}\n//# sourceMappingURL=Status.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/thirdweb@5.105.41_@hey-api+openapi-ts@0.82.4_typescript@5.9.2__@types+react-dom@18.3.7__e1a4416e7a5fc1376f0fbb1403784ce8/node_modules/thirdweb/dist/esm/bridge/Status.js\n"));

/***/ })

}]);