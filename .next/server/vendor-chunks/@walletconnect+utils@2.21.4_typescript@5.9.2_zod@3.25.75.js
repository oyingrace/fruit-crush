"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@walletconnect+utils@2.21.4_typescript@5.9.2_zod@3.25.75";
exports.ids = ["vendor-chunks/@walletconnect+utils@2.21.4_typescript@5.9.2_zod@3.25.75"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@walletconnect+utils@2.21.4_typescript@5.9.2_zod@3.25.75/node_modules/@walletconnect/utils/dist/index.es.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@walletconnect+utils@2.21.4_typescript@5.9.2_zod@3.25.75/node_modules/@walletconnect/utils/dist/index.es.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BASE10: () => (/* binding */ $n),\n/* harmony export */   BASE16: () => (/* binding */ tt),\n/* harmony export */   BASE64: () => (/* binding */ Qt),\n/* harmony export */   BASE64URL: () => (/* binding */ De),\n/* harmony export */   COLON: () => (/* binding */ Hs),\n/* harmony export */   DEFAULT_DEPTH: () => (/* binding */ We),\n/* harmony export */   EMPTY_SPACE: () => (/* binding */ Ee),\n/* harmony export */   ENV_MAP: () => (/* binding */ J),\n/* harmony export */   INTERNAL_ERRORS: () => (/* binding */ Qo),\n/* harmony export */   LimitedSet: () => (/* binding */ gi),\n/* harmony export */   MemoryStore: () => (/* binding */ Ha),\n/* harmony export */   ONE_THOUSAND: () => (/* binding */ Ds),\n/* harmony export */   REACT_NATIVE_PRODUCT: () => (/* binding */ er),\n/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ Mo),\n/* harmony export */   SDK_ERRORS: () => (/* binding */ Jo),\n/* harmony export */   SDK_TYPE: () => (/* binding */ rr),\n/* harmony export */   SLASH: () => (/* binding */ nr),\n/* harmony export */   TYPE_0: () => (/* binding */ Cn),\n/* harmony export */   TYPE_1: () => (/* binding */ ee),\n/* harmony export */   TYPE_2: () => (/* binding */ ge),\n/* harmony export */   UTF8: () => (/* binding */ te),\n/* harmony export */   addResourceToRecap: () => (/* binding */ Yr),\n/* harmony export */   addSignatureToExtrinsic: () => (/* binding */ bs),\n/* harmony export */   appendToQueryString: () => (/* binding */ or),\n/* harmony export */   assertType: () => (/* binding */ Zs),\n/* harmony export */   assignAbilityToActions: () => (/* binding */ hn),\n/* harmony export */   base64Decode: () => (/* binding */ Zr),\n/* harmony export */   base64Encode: () => (/* binding */ Gr),\n/* harmony export */   buildApprovedNamespaces: () => (/* binding */ pa),\n/* harmony export */   buildAuthObject: () => (/* binding */ mf),\n/* harmony export */   buildNamespacesFromAuth: () => (/* binding */ ga),\n/* harmony export */   buildRecapStatement: () => (/* binding */ Jr),\n/* harmony export */   buildSignedExtrinsicHash: () => (/* binding */ Ka),\n/* harmony export */   calcExpiry: () => (/* binding */ ii),\n/* harmony export */   capitalize: () => (/* binding */ ti),\n/* harmony export */   capitalizeWord: () => (/* binding */ lr),\n/* harmony export */   createDelayedPromise: () => (/* binding */ ei),\n/* harmony export */   createEncodedRecap: () => (/* binding */ Ef),\n/* harmony export */   createExpiringPromise: () => (/* binding */ ni),\n/* harmony export */   createRecap: () => (/* binding */ Wr),\n/* harmony export */   decodeRecap: () => (/* binding */ Lt),\n/* harmony export */   decodeTypeByte: () => (/* binding */ Vt),\n/* harmony export */   decodeTypeTwoEnvelope: () => (/* binding */ Yc),\n/* harmony export */   decrypt: () => (/* binding */ Zc),\n/* harmony export */   deriveExtrinsicHash: () => (/* binding */ ys),\n/* harmony export */   deriveSymKey: () => (/* binding */ Kc),\n/* harmony export */   deserialize: () => (/* binding */ Me),\n/* harmony export */   encodeRecap: () => (/* binding */ Ne),\n/* harmony export */   encodeTypeByte: () => (/* binding */ jn),\n/* harmony export */   encodeTypeTwoEnvelope: () => (/* binding */ Wc),\n/* harmony export */   encrypt: () => (/* binding */ Gc),\n/* harmony export */   engineEvent: () => (/* binding */ ci),\n/* harmony export */   enumify: () => (/* binding */ Qs),\n/* harmony export */   extractSolanaTransactionId: () => (/* binding */ sf),\n/* harmony export */   formatAccountId: () => (/* binding */ Zn),\n/* harmony export */   formatAccountWithChain: () => (/* binding */ Os),\n/* harmony export */   formatChainId: () => (/* binding */ Gn),\n/* harmony export */   formatDeeplinkUrl: () => (/* binding */ dr),\n/* harmony export */   formatExpirerTarget: () => (/* binding */ Xe),\n/* harmony export */   formatIdTarget: () => (/* binding */ oi),\n/* harmony export */   formatMessage: () => (/* binding */ qr),\n/* harmony export */   formatMessageContext: () => (/* binding */ Ws),\n/* harmony export */   formatRelayParams: () => (/* binding */ Ko),\n/* harmony export */   formatRelayRpcUrl: () => (/* binding */ zs),\n/* harmony export */   formatStatementFromRecap: () => (/* binding */ gn),\n/* harmony export */   formatTopicTarget: () => (/* binding */ ri),\n/* harmony export */   formatUA: () => (/* binding */ cr),\n/* harmony export */   formatUri: () => (/* binding */ oa),\n/* harmony export */   fromBase64: () => (/* binding */ Qe),\n/* harmony export */   generateKeyPair: () => (/* binding */ Vc),\n/* harmony export */   generateRandomBytes32: () => (/* binding */ qc),\n/* harmony export */   getAccountsChains: () => (/* binding */ qt),\n/* harmony export */   getAccountsFromNamespaces: () => (/* binding */ _s),\n/* harmony export */   getAddressFromAccount: () => (/* binding */ Wn),\n/* harmony export */   getAddressesFromAccounts: () => (/* binding */ Us),\n/* harmony export */   getAlgorandTransactionId: () => (/* binding */ af),\n/* harmony export */   getAppId: () => (/* binding */ qs),\n/* harmony export */   getAppMetadata: () => (/* binding */ sr),\n/* harmony export */   getBrowserOnlineStatus: () => (/* binding */ us),\n/* harmony export */   getChainFromAccount: () => (/* binding */ Yn),\n/* harmony export */   getChainsFromAccounts: () => (/* binding */ Xn),\n/* harmony export */   getChainsFromNamespace: () => (/* binding */ ve),\n/* harmony export */   getChainsFromNamespaces: () => (/* binding */ Ts),\n/* harmony export */   getChainsFromRecap: () => (/* binding */ Af),\n/* harmony export */   getChainsFromRequiredNamespaces: () => (/* binding */ Rs),\n/* harmony export */   getCommonValuesInArrays: () => (/* binding */ Je),\n/* harmony export */   getCryptoKeyFromKeyData: () => (/* binding */ Do),\n/* harmony export */   getDecodedRecapFromResources: () => (/* binding */ Kr),\n/* harmony export */   getDeepLink: () => (/* binding */ ui),\n/* harmony export */   getDidAddress: () => (/* binding */ dn),\n/* harmony export */   getDidAddressSegments: () => (/* binding */ Se),\n/* harmony export */   getDidChainId: () => (/* binding */ Mr),\n/* harmony export */   getEnvironment: () => (/* binding */ Pt),\n/* harmony export */   getHttpUrl: () => (/* binding */ Gs),\n/* harmony export */   getInternalError: () => (/* binding */ Et),\n/* harmony export */   getJavascriptID: () => (/* binding */ fr),\n/* harmony export */   getJavascriptOS: () => (/* binding */ ir),\n/* harmony export */   getLastItems: () => (/* binding */ ur),\n/* harmony export */   getLinkModeURL: () => (/* binding */ sa),\n/* harmony export */   getMethodsFromRecap: () => (/* binding */ If),\n/* harmony export */   getNamespacedDidChainId: () => (/* binding */ Vr),\n/* harmony export */   getNamespacesChains: () => (/* binding */ Go),\n/* harmony export */   getNamespacesEventsForChainId: () => (/* binding */ Wo),\n/* harmony export */   getNamespacesFromAccounts: () => (/* binding */ Xo),\n/* harmony export */   getNamespacesMethodsForChainId: () => (/* binding */ Zo),\n/* harmony export */   getNearTransactionIdFromSignedTransaction: () => (/* binding */ cf),\n/* harmony export */   getNearUint8ArrayFromBytes: () => (/* binding */ kr),\n/* harmony export */   getNodeOnlineStatus: () => (/* binding */ ds),\n/* harmony export */   getReCapActions: () => (/* binding */ zr),\n/* harmony export */   getReactNativeOnlineStatus: () => (/* binding */ ls),\n/* harmony export */   getRecapAbilitiesFromResource: () => (/* binding */ vf),\n/* harmony export */   getRecapFromResources: () => (/* binding */ Oe),\n/* harmony export */   getRecapResource: () => (/* binding */ Fr),\n/* harmony export */   getRelayClientMetadata: () => (/* binding */ Fs),\n/* harmony export */   getRelayProtocolApi: () => (/* binding */ na),\n/* harmony export */   getRelayProtocolName: () => (/* binding */ ea),\n/* harmony export */   getRequiredNamespacesFromNamespaces: () => (/* binding */ ha),\n/* harmony export */   getSdkError: () => (/* binding */ Kt),\n/* harmony export */   getSearchParamFromURL: () => (/* binding */ li),\n/* harmony export */   getSignDirectHash: () => (/* binding */ uf),\n/* harmony export */   getSuiDigest: () => (/* binding */ ff),\n/* harmony export */   getUniqueValues: () => (/* binding */ Ge),\n/* harmony export */   handleDeeplinkRedirect: () => (/* binding */ ai),\n/* harmony export */   hasOverlap: () => (/* binding */ It),\n/* harmony export */   hashEthereumMessage: () => (/* binding */ an),\n/* harmony export */   hashKey: () => (/* binding */ Fc),\n/* harmony export */   hashMessage: () => (/* binding */ zc),\n/* harmony export */   isAndroid: () => (/* binding */ Ms),\n/* harmony export */   isAppVisible: () => (/* binding */ Pa),\n/* harmony export */   isBrowser: () => (/* binding */ zt),\n/* harmony export */   isCaipNamespace: () => (/* binding */ Pn),\n/* harmony export */   isConformingNamespaces: () => (/* binding */ cs),\n/* harmony export */   isExpired: () => (/* binding */ fi),\n/* harmony export */   isIframe: () => (/* binding */ gr),\n/* harmony export */   isIos: () => (/* binding */ Vs),\n/* harmony export */   isNode: () => (/* binding */ Ye),\n/* harmony export */   isOnline: () => (/* binding */ ja),\n/* harmony export */   isProposalStruct: () => (/* binding */ wa),\n/* harmony export */   isReactNative: () => (/* binding */ Bt),\n/* harmony export */   isRecap: () => (/* binding */ pn),\n/* harmony export */   isSessionCompatible: () => (/* binding */ ya),\n/* harmony export */   isSessionStruct: () => (/* binding */ xa),\n/* harmony export */   isTelegram: () => (/* binding */ pr),\n/* harmony export */   isTestRun: () => (/* binding */ hi),\n/* harmony export */   isTypeOneEnvelope: () => (/* binding */ Jc),\n/* harmony export */   isTypeTwoEnvelope: () => (/* binding */ Qc),\n/* harmony export */   isUndefined: () => (/* binding */ kt),\n/* harmony export */   isValidAccountId: () => (/* binding */ ts),\n/* harmony export */   isValidAccounts: () => (/* binding */ rs),\n/* harmony export */   isValidActions: () => (/* binding */ ss),\n/* harmony export */   isValidArray: () => (/* binding */ me),\n/* harmony export */   isValidChainId: () => (/* binding */ we),\n/* harmony export */   isValidChains: () => (/* binding */ es),\n/* harmony export */   isValidController: () => (/* binding */ va),\n/* harmony export */   isValidEip1271Signature: () => (/* binding */ jr),\n/* harmony export */   isValidEip191Signature: () => (/* binding */ Lr),\n/* harmony export */   isValidErrorReason: () => (/* binding */ Sa),\n/* harmony export */   isValidEvent: () => (/* binding */ Ua),\n/* harmony export */   isValidId: () => (/* binding */ Ia),\n/* harmony export */   isValidNamespaceAccounts: () => (/* binding */ os),\n/* harmony export */   isValidNamespaceActions: () => (/* binding */ Dn),\n/* harmony export */   isValidNamespaceChains: () => (/* binding */ ns),\n/* harmony export */   isValidNamespaceMethodsOrEvents: () => (/* binding */ Hn),\n/* harmony export */   isValidNamespaces: () => (/* binding */ is),\n/* harmony export */   isValidNamespacesChainId: () => (/* binding */ _a),\n/* harmony export */   isValidNamespacesEvent: () => (/* binding */ Ra),\n/* harmony export */   isValidNamespacesRequest: () => (/* binding */ Ta),\n/* harmony export */   isValidNumber: () => (/* binding */ qe),\n/* harmony export */   isValidObject: () => (/* binding */ Ve),\n/* harmony export */   isValidParams: () => (/* binding */ Aa),\n/* harmony export */   isValidRecap: () => (/* binding */ bt),\n/* harmony export */   isValidRelay: () => (/* binding */ fs),\n/* harmony export */   isValidRelays: () => (/* binding */ Ba),\n/* harmony export */   isValidRequest: () => (/* binding */ Na),\n/* harmony export */   isValidRequestExpiry: () => (/* binding */ La),\n/* harmony export */   isValidRequiredNamespaces: () => (/* binding */ Ea),\n/* harmony export */   isValidResponse: () => (/* binding */ Oa),\n/* harmony export */   isValidString: () => (/* binding */ it),\n/* harmony export */   isValidUrl: () => (/* binding */ ma),\n/* harmony export */   mapEntries: () => (/* binding */ Js),\n/* harmony export */   mapToObj: () => (/* binding */ Ys),\n/* harmony export */   mergeArrays: () => (/* binding */ ct),\n/* harmony export */   mergeEncodedRecaps: () => (/* binding */ Bf),\n/* harmony export */   mergeRecaps: () => (/* binding */ Xr),\n/* harmony export */   mergeRequiredAndOptionalNamespaces: () => (/* binding */ ba),\n/* harmony export */   normalizeNamespaces: () => (/* binding */ ye),\n/* harmony export */   objToMap: () => (/* binding */ Xs),\n/* harmony export */   openDeeplink: () => (/* binding */ hr),\n/* harmony export */   parseAccountId: () => (/* binding */ ze),\n/* harmony export */   parseChainId: () => (/* binding */ Fe),\n/* harmony export */   parseContextNames: () => (/* binding */ ar),\n/* harmony export */   parseExpirerTarget: () => (/* binding */ si),\n/* harmony export */   parseNamespaceKey: () => (/* binding */ Yo),\n/* harmony export */   parseRelayParams: () => (/* binding */ Vo),\n/* harmony export */   parseTopic: () => (/* binding */ qo),\n/* harmony export */   parseUri: () => (/* binding */ ra),\n/* harmony export */   populateAppMetadata: () => (/* binding */ Ks),\n/* harmony export */   populateAuthPayload: () => (/* binding */ wf),\n/* harmony export */   recapHasResource: () => (/* binding */ xf),\n/* harmony export */   serialize: () => (/* binding */ kn),\n/* harmony export */   sleep: () => (/* binding */ pi),\n/* harmony export */   ss58AddressToPublicKey: () => (/* binding */ gs),\n/* harmony export */   subscribeToBrowserNetworkChange: () => (/* binding */ hs),\n/* harmony export */   subscribeToNetworkChange: () => (/* binding */ ka),\n/* harmony export */   subscribeToReactNativeNetworkChange: () => (/* binding */ ps),\n/* harmony export */   toBase64: () => (/* binding */ br),\n/* harmony export */   uuidv4: () => (/* binding */ di),\n/* harmony export */   validateDecoding: () => (/* binding */ Xc),\n/* harmony export */   validateEncoding: () => (/* binding */ Ho),\n/* harmony export */   validateSignedCacao: () => (/* binding */ yf),\n/* harmony export */   verifyP256Jwt: () => (/* binding */ ta),\n/* harmony export */   verifySignature: () => (/* binding */ Cr)\n/* harmony export */ });\n/* harmony import */ var detect_browser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! detect-browser */ \"(ssr)/./node_modules/.pnpm/detect-browser@5.3.0/node_modules/detect-browser/es/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/.pnpm/@walletconnect+time@1.0.2/node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/window-getters */ \"(ssr)/./node_modules/.pnpm/@walletconnect+window-getters@1.0.1/node_modules/@walletconnect/window-getters/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/window-metadata */ \"(ssr)/./node_modules/.pnpm/@walletconnect+window-metadata@1.0.1/node_modules/@walletconnect/window-metadata/dist/cjs/index.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.31.0_typescript@5.9.2_zod@3.25.75/node_modules/viem/_esm/utils/signature/recoverAddress.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/.pnpm/bs58@6.0.0/node_modules/bs58/src/esm/index.js\");\n/* harmony import */ var _msgpack_msgpack__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @msgpack/msgpack */ \"(ssr)/./node_modules/.pnpm/@msgpack+msgpack@3.1.2/node_modules/@msgpack/msgpack/dist.esm/decode.mjs\");\n/* harmony import */ var _msgpack_msgpack__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @msgpack/msgpack */ \"(ssr)/./node_modules/.pnpm/@msgpack+msgpack@3.1.2/node_modules/@msgpack/msgpack/dist.esm/encode.mjs\");\n/* harmony import */ var _scure_base__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @scure/base */ \"(ssr)/./node_modules/.pnpm/@scure+base@1.2.6/node_modules/@scure/base/lib/esm/index.js\");\n/* harmony import */ var _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/relay-auth */ \"(ssr)/./node_modules/.pnpm/@walletconnect+relay-auth@1.1.0/node_modules/@walletconnect/relay-auth/dist/index.es.js\");\n/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uint8arrays */ \"(ssr)/./node_modules/.pnpm/uint8arrays@3.1.1/node_modules/uint8arrays/esm/src/index.js\");\n/* harmony import */ var _walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/relay-api */ \"(ssr)/./node_modules/.pnpm/@walletconnect+relay-api@1.0.11/node_modules/@walletconnect/relay-api/dist/index.es.js\");\n/* harmony import */ var blakejs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! blakejs */ \"(ssr)/./node_modules/.pnpm/blakejs@1.2.1/node_modules/blakejs/index.js\");\n/* harmony import */ var blakejs__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(blakejs__WEBPACK_IMPORTED_MODULE_7__);\nconst xe=\":\";function Fe(t){const[e,n]=t.split(xe);return{namespace:e,reference:n}}function Gn(t){const{namespace:e,reference:n}=t;return[e,n].join(xe)}function ze(t){const[e,n,r]=t.split(xe);return{namespace:e,reference:n,address:r}}function Zn(t){const{namespace:e,reference:n,address:r}=t;return[e,n,r].join(xe)}function Ge(t,e){const n=[];return t.forEach(r=>{const o=e(r);n.includes(o)||n.push(o)}),n}function Wn(t){const{address:e}=ze(t);return e}function Yn(t){const{namespace:e,reference:n}=ze(t);return Gn({namespace:e,reference:n})}function Os(t,e){const{namespace:n,reference:r}=Fe(e);return Zn({namespace:n,reference:r,address:t})}function Us(t){return Ge(t,Wn)}function Xn(t){return Ge(t,Yn)}function _s(t,e=[]){const n=[];return Object.keys(t).forEach(r=>{if(e.length&&!e.includes(r))return;const o=t[r];n.push(...o.accounts)}),n}function Ts(t,e=[]){const n=[];return Object.keys(t).forEach(r=>{if(e.length&&!e.includes(r))return;const o=t[r];n.push(...Xn(o.accounts))}),n}function Rs(t,e=[]){const n=[];return Object.keys(t).forEach(r=>{if(e.length&&!e.includes(r))return;const o=t[r];n.push(...ve(r,o))}),n}function ve(t,e){return t.includes(\":\")?[t]:e.chains||[]}var $s=Object.defineProperty,Cs=Object.defineProperties,Ls=Object.getOwnPropertyDescriptors,Jn=Object.getOwnPropertySymbols,js=Object.prototype.hasOwnProperty,ks=Object.prototype.propertyIsEnumerable,Ze=(t,e,n)=>e in t?$s(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,Qn=(t,e)=>{for(var n in e||(e={}))js.call(e,n)&&Ze(t,n,e[n]);if(Jn)for(var n of Jn(e))ks.call(e,n)&&Ze(t,n,e[n]);return t},Ps=(t,e)=>Cs(t,Ls(e)),tr=(t,e,n)=>Ze(t,typeof e!=\"symbol\"?e+\"\":e,n);const er=\"ReactNative\",J={reactNative:\"react-native\",node:\"node\",browser:\"browser\",unknown:\"unknown\"},Ee=\" \",Hs=\":\",nr=\"/\",We=2,Ds=1e3,rr=\"js\";function Ye(){return typeof process<\"u\"&&typeof process.versions<\"u\"&&typeof process.versions.node<\"u\"}function Bt(){return!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getNavigator)()&&navigator.product===er}function Ms(){return Bt()&&typeof global<\"u\"&&typeof(global==null?void 0:global.Platform)<\"u\"&&(global==null?void 0:global.Platform.OS)===\"android\"}function Vs(){return Bt()&&typeof global<\"u\"&&typeof(global==null?void 0:global.Platform)<\"u\"&&(global==null?void 0:global.Platform.OS)===\"ios\"}function zt(){return!Ye()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getNavigator)()&&!!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)()}function Pt(){return Bt()?J.reactNative:Ye()?J.node:zt()?J.browser:J.unknown}function qs(){var t;try{return Bt()&&typeof global<\"u\"&&typeof(global==null?void 0:global.Application)<\"u\"?(t=global.Application)==null?void 0:t.applicationId:void 0}catch{return}}function or(t,e){const n=new URLSearchParams(t);for(const r of Object.keys(e).sort())if(e.hasOwnProperty(r)){const o=e[r];o!==void 0&&n.set(r,o)}return n.toString()}function Ks(t){var e,n;const r=sr();try{return t!=null&&t.url&&r.url&&new URL(t.url).host!==new URL(r.url).host&&(console.warn(`The configured WalletConnect 'metadata.url':${t.url} differs from the actual page url:${r.url}. This is probably unintended and can lead to issues.`),t.url=r.url),(e=t?.icons)!=null&&e.length&&t.icons.length>0&&(t.icons=t.icons.filter(o=>o!==\"\")),Ps(Qn(Qn({},r),t),{url:t?.url||r.url,name:t?.name||r.name,description:t?.description||r.description,icons:(n=t?.icons)!=null&&n.length&&t.icons.length>0?t.icons:r.icons})}catch(o){return console.warn(\"Error populating app metadata\",o),t||r}}function sr(){return (0,_walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_2__.getWindowMetadata)()||{name:\"\",description:\"\",url:\"\",icons:[\"\"]}}function Fs(t,e){var n;const r=Pt(),o={protocol:t,version:e,env:r};return r===\"browser\"&&(o.host=((n=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getLocation)())==null?void 0:n.host)||\"unknown\"),o}function ir(){if(Pt()===J.reactNative&&typeof global<\"u\"&&typeof(global==null?void 0:global.Platform)<\"u\"){const{OS:n,Version:r}=global.Platform;return[n,r].join(\"-\")}const t=(0,detect_browser__WEBPACK_IMPORTED_MODULE_8__.detect)();if(t===null)return\"unknown\";const e=t.os?t.os.replace(\" \",\"\").toLowerCase():\"unknown\";return t.type===\"browser\"?[e,t.name,t.version].join(\"-\"):[e,t.version].join(\"-\")}function fr(){var t;const e=Pt();return e===J.browser?[e,((t=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getLocation)())==null?void 0:t.host)||\"unknown\"].join(\":\"):e}function cr(t,e,n){const r=ir(),o=fr();return[[t,e].join(\"-\"),[rr,n].join(\"-\"),r,o].join(\"/\")}function zs({protocol:t,version:e,relayUrl:n,sdkVersion:r,auth:o,projectId:s,useOnCloseEvent:i,bundleId:f,packageName:c}){const u=n.split(\"?\"),a=cr(t,e,r),l={auth:o,ua:a,projectId:s,useOnCloseEvent:i||void 0,packageName:c||void 0,bundleId:f||void 0},h=or(u[1]||\"\",l);return u[0]+\"?\"+h}function Gs(t){let e=(t.match(/^[^:]+(?=:\\/\\/)/gi)||[])[0];const n=typeof e<\"u\"?t.split(\"://\")[1]:t;return e=e===\"wss\"?\"https\":\"http\",[e,n].join(\"://\")}function Zs(t,e,n){if(!t[e]||typeof t[e]!==n)throw new Error(`Missing or invalid \"${e}\" param`)}function ar(t,e=We){return ur(t.split(nr),e)}function Ws(t){return ar(t).join(Ee)}function It(t,e){return t.filter(n=>e.includes(n)).length===t.length}function ur(t,e=We){return t.slice(Math.max(t.length-e,0))}function Ys(t){return Object.fromEntries(t.entries())}function Xs(t){return new Map(Object.entries(t))}function Js(t,e){const n={};return Object.keys(t).forEach(r=>{n[r]=e(t[r])}),n}const Qs=t=>t;function lr(t){return t.trim().replace(/^\\w/,e=>e.toUpperCase())}function ti(t){return t.split(Ee).map(e=>lr(e)).join(Ee)}function ei(t=_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.FIVE_MINUTES,e){const n=(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.toMiliseconds)(t||_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.FIVE_MINUTES);let r,o,s,i;return{resolve:f=>{s&&r&&(clearTimeout(s),r(f),i=Promise.resolve(f))},reject:f=>{s&&o&&(clearTimeout(s),o(f))},done:()=>new Promise((f,c)=>{if(i)return f(i);s=setTimeout(()=>{const u=new Error(e);i=Promise.reject(u),c(u)},n),r=f,o=c})}}function ni(t,e,n){return new Promise(async(r,o)=>{const s=setTimeout(()=>o(new Error(n)),e);try{const i=await t;r(i)}catch(i){o(i)}clearTimeout(s)})}function Xe(t,e){if(typeof e==\"string\"&&e.startsWith(`${t}:`))return e;if(t.toLowerCase()===\"topic\"){if(typeof e!=\"string\")throw new Error('Value must be \"string\" for expirer target type: topic');return`topic:${e}`}else if(t.toLowerCase()===\"id\"){if(typeof e!=\"number\")throw new Error('Value must be \"number\" for expirer target type: id');return`id:${e}`}throw new Error(`Unknown expirer target type: ${t}`)}function ri(t){return Xe(\"topic\",t)}function oi(t){return Xe(\"id\",t)}function si(t){const[e,n]=t.split(\":\"),r={id:void 0,topic:void 0};if(e===\"topic\"&&typeof n==\"string\")r.topic=n;else if(e===\"id\"&&Number.isInteger(Number(n)))r.id=Number(n);else throw new Error(`Invalid target, expected id:number or topic:string, got ${e}:${n}`);return r}function ii(t,e){return (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.fromMiliseconds)((e||Date.now())+(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.toMiliseconds)(t))}function fi(t){return Date.now()>=(0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.toMiliseconds)(t)}function ci(t,e){return`${t}${e?`:${e}`:\"\"}`}function ct(t=[],e=[]){return[...new Set([...t,...e])]}async function ai({id:t,topic:e,wcDeepLink:n}){var r;try{if(!n)return;const o=typeof n==\"string\"?JSON.parse(n):n,s=o?.href;if(typeof s!=\"string\")return;const i=dr(s,t,e),f=Pt();if(f===J.browser){if(!((r=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)())!=null&&r.hasFocus())){console.warn(\"Document does not have focus, skipping deeplink.\");return}hr(i)}else f===J.reactNative&&typeof(global==null?void 0:global.Linking)<\"u\"&&await global.Linking.openURL(i)}catch(o){console.error(o)}}function dr(t,e,n){const r=`requestId=${e}&sessionTopic=${n}`;t.endsWith(\"/\")&&(t=t.slice(0,-1));let o=`${t}`;if(t.startsWith(\"https://t.me\")){const s=t.includes(\"?\")?\"&startapp=\":\"?startapp=\";o=`${o}${s}${br(r,!0)}`}else o=`${o}/wc?${r}`;return o}function hr(t){let e=\"_self\";gr()?e=\"_top\":(pr()||t.startsWith(\"https://\")||t.startsWith(\"http://\"))&&(e=\"_blank\"),window.open(t,e,\"noreferrer noopener\")}async function ui(t,e){let n=\"\";try{if(zt()&&(n=localStorage.getItem(e),n))return n;n=await t.getItem(e)}catch(r){console.error(r)}return n}function Je(t,e){return t.filter(n=>e.includes(n))}function li(t,e){if(!t.includes(e))return null;const n=t.split(/([&,?,=])/),r=n.indexOf(e);return n[r+2]}function di(){return typeof crypto<\"u\"&&crypto!=null&&crypto.randomUUID?crypto.randomUUID():\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/gu,t=>{const e=Math.random()*16|0;return(t===\"x\"?e:e&3|8).toString(16)})}function hi(){return typeof process<\"u\"&&process.env.IS_VITEST===\"true\"}function pr(){return typeof window<\"u\"&&(!!window.TelegramWebviewProxy||!!window.Telegram||!!window.TelegramWebviewProxyProto)}function gr(){try{return window.self!==window.top}catch{return!1}}function br(t,e=!1){const n=Buffer.from(t).toString(\"base64\");return e?n.replace(/[=]/g,\"\"):n}function Qe(t){return Buffer.from(t,\"base64\").toString(\"utf-8\")}function pi(t){return new Promise(e=>setTimeout(e,t))}class gi{constructor({limit:e}){tr(this,\"limit\"),tr(this,\"set\"),this.limit=e,this.set=new Set}add(e){if(!this.set.has(e)){if(this.set.size>=this.limit){const n=this.set.values().next().value;n&&this.set.delete(n)}this.set.add(e)}}has(e){return this.set.has(e)}}const Be=BigInt(2**32-1),yr=BigInt(32);function mr(t,e=!1){return e?{h:Number(t&Be),l:Number(t>>yr&Be)}:{h:Number(t>>yr&Be)|0,l:Number(t&Be)|0}}function wr(t,e=!1){const n=t.length;let r=new Uint32Array(n),o=new Uint32Array(n);for(let s=0;s<n;s++){const{h:i,l:f}=mr(t[s],e);[r[s],o[s]]=[i,f]}return[r,o]}const xr=(t,e,n)=>t>>>n,vr=(t,e,n)=>t<<32-n|e>>>n,At=(t,e,n)=>t>>>n|e<<32-n,St=(t,e,n)=>t<<32-n|e>>>n,se=(t,e,n)=>t<<64-n|e>>>n-32,ie=(t,e,n)=>t>>>n-32|e<<64-n,bi=(t,e)=>e,yi=(t,e)=>t,mi=(t,e,n)=>t<<n|e>>>32-n,wi=(t,e,n)=>e<<n|t>>>32-n,xi=(t,e,n)=>e<<n-32|t>>>64-n,vi=(t,e,n)=>t<<n-32|e>>>64-n;function dt(t,e,n,r){const o=(e>>>0)+(r>>>0);return{h:t+n+(o/2**32|0)|0,l:o|0}}const tn=(t,e,n)=>(t>>>0)+(e>>>0)+(n>>>0),en=(t,e,n,r)=>e+n+r+(t/2**32|0)|0,Ei=(t,e,n,r)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0),Bi=(t,e,n,r,o)=>e+n+r+o+(t/2**32|0)|0,Ii=(t,e,n,r,o)=>(t>>>0)+(e>>>0)+(n>>>0)+(r>>>0)+(o>>>0),Ai=(t,e,n,r,o,s)=>e+n+r+o+s+(t/2**32|0)|0,Gt=typeof globalThis==\"object\"&&\"crypto\"in globalThis?globalThis.crypto:void 0;function nn(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name===\"Uint8Array\"}function mt(t){if(!Number.isSafeInteger(t)||t<0)throw new Error(\"positive integer expected, got \"+t)}function at(t,...e){if(!nn(t))throw new Error(\"Uint8Array expected\");if(e.length>0&&!e.includes(t.length))throw new Error(\"Uint8Array expected of length \"+e+\", got length=\"+t.length)}function rn(t){if(typeof t!=\"function\"||typeof t.create!=\"function\")throw new Error(\"Hash should be wrapped by utils.createHasher\");mt(t.outputLen),mt(t.blockLen)}function Nt(t,e=!0){if(t.destroyed)throw new Error(\"Hash instance has been destroyed\");if(e&&t.finished)throw new Error(\"Hash#digest() has already been called\")}function on(t,e){at(t);const n=e.outputLen;if(t.length<n)throw new Error(\"digestInto() expects output buffer of length at least \"+n)}function fe(t){return new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4))}function ut(...t){for(let e=0;e<t.length;e++)t[e].fill(0)}function sn(t){return new DataView(t.buffer,t.byteOffset,t.byteLength)}function gt(t,e){return t<<32-e|t>>>e}const Er=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function Br(t){return t<<24&4278190080|t<<8&16711680|t>>>8&65280|t>>>24&255}const wt=Er?t=>t:t=>Br(t);function Si(t){for(let e=0;e<t.length;e++)t[e]=Br(t[e]);return t}const Ot=Er?t=>t:Si,Ir=typeof Uint8Array.from([]).toHex==\"function\"&&typeof Uint8Array.fromHex==\"function\",Ni=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,\"0\"));function ce(t){if(at(t),Ir)return t.toHex();let e=\"\";for(let n=0;n<t.length;n++)e+=Ni[t[n]];return e}const xt={_0:48,_9:57,A:65,F:70,a:97,f:102};function Ar(t){if(t>=xt._0&&t<=xt._9)return t-xt._0;if(t>=xt.A&&t<=xt.F)return t-(xt.A-10);if(t>=xt.a&&t<=xt.f)return t-(xt.a-10)}function fn(t){if(typeof t!=\"string\")throw new Error(\"hex string expected, got \"+typeof t);if(Ir)return Uint8Array.fromHex(t);const e=t.length,n=e/2;if(e%2)throw new Error(\"hex string expected, got unpadded hex of length \"+e);const r=new Uint8Array(n);for(let o=0,s=0;o<n;o++,s+=2){const i=Ar(t.charCodeAt(s)),f=Ar(t.charCodeAt(s+1));if(i===void 0||f===void 0){const c=t[s]+t[s+1];throw new Error('hex string expected, got non-hex character \"'+c+'\" at index '+s)}r[o]=i*16+f}return r}function Oi(t){if(typeof t!=\"string\")throw new Error(\"string expected\");return new Uint8Array(new TextEncoder().encode(t))}function ht(t){return typeof t==\"string\"&&(t=Oi(t)),at(t),t}function Ht(...t){let e=0;for(let r=0;r<t.length;r++){const o=t[r];at(o),e+=o.length}const n=new Uint8Array(e);for(let r=0,o=0;r<t.length;r++){const s=t[r];n.set(s,o),o+=s.length}return n}class Ie{}function ae(t){const e=r=>t().update(ht(r)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}function Ui(t){const e=(r,o)=>t(o).update(ht(r)).digest(),n=t({});return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=r=>t(r),e}function Zt(t=32){if(Gt&&typeof Gt.getRandomValues==\"function\")return Gt.getRandomValues(new Uint8Array(t));if(Gt&&typeof Gt.randomBytes==\"function\")return Uint8Array.from(Gt.randomBytes(t));throw new Error(\"crypto.getRandomValues must be defined\")}const _i=BigInt(0),ue=BigInt(1),Ti=BigInt(2),Ri=BigInt(7),$i=BigInt(256),Ci=BigInt(113),Sr=[],Nr=[],Or=[];for(let t=0,e=ue,n=1,r=0;t<24;t++){[n,r]=[r,(2*n+3*r)%5],Sr.push(2*(5*r+n)),Nr.push((t+1)*(t+2)/2%64);let o=_i;for(let s=0;s<7;s++)e=(e<<ue^(e>>Ri)*Ci)%$i,e&Ti&&(o^=ue<<(ue<<BigInt(s))-ue);Or.push(o)}const Ur=wr(Or,!0),Li=Ur[0],ji=Ur[1],_r=(t,e,n)=>n>32?xi(t,e,n):mi(t,e,n),Tr=(t,e,n)=>n>32?vi(t,e,n):wi(t,e,n);function ki(t,e=24){const n=new Uint32Array(10);for(let r=24-e;r<24;r++){for(let i=0;i<10;i++)n[i]=t[i]^t[i+10]^t[i+20]^t[i+30]^t[i+40];for(let i=0;i<10;i+=2){const f=(i+8)%10,c=(i+2)%10,u=n[c],a=n[c+1],l=_r(u,a,1)^n[f],h=Tr(u,a,1)^n[f+1];for(let g=0;g<50;g+=10)t[i+g]^=l,t[i+g+1]^=h}let o=t[2],s=t[3];for(let i=0;i<24;i++){const f=Nr[i],c=_r(o,s,f),u=Tr(o,s,f),a=Sr[i];o=t[a],s=t[a+1],t[a]=c,t[a+1]=u}for(let i=0;i<50;i+=10){for(let f=0;f<10;f++)n[f]=t[i+f];for(let f=0;f<10;f++)t[i+f]^=~n[(f+2)%10]&n[(f+4)%10]}t[0]^=Li[r],t[1]^=ji[r]}ut(n)}class qn extends Ie{constructor(e,n,r,o=!1,s=24){if(super(),this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,this.enableXOF=!1,this.blockLen=e,this.suffix=n,this.outputLen=r,this.enableXOF=o,this.rounds=s,mt(r),!(0<e&&e<200))throw new Error(\"only keccak-f1600 function is supported\");this.state=new Uint8Array(200),this.state32=fe(this.state)}clone(){return this._cloneInto()}keccak(){Ot(this.state32),ki(this.state32,this.rounds),Ot(this.state32),this.posOut=0,this.pos=0}update(e){Nt(this),e=ht(e),at(e);const{blockLen:n,state:r}=this,o=e.length;for(let s=0;s<o;){const i=Math.min(n-this.pos,o-s);for(let f=0;f<i;f++)r[this.pos++]^=e[s++];this.pos===n&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:n,pos:r,blockLen:o}=this;e[r]^=n,(n&128)!==0&&r===o-1&&this.keccak(),e[o-1]^=128,this.keccak()}writeInto(e){Nt(this,!1),at(e),this.finish();const n=this.state,{blockLen:r}=this;for(let o=0,s=e.length;o<s;){this.posOut>=r&&this.keccak();const i=Math.min(r-this.posOut,s-o);e.set(n.subarray(this.posOut,this.posOut+i),o),this.posOut+=i,o+=i}return e}xofInto(e){if(!this.enableXOF)throw new Error(\"XOF is not possible for this instance\");return this.writeInto(e)}xof(e){return mt(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(on(e,this),this.finished)throw new Error(\"digest() was already called\");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,ut(this.state)}_cloneInto(e){const{blockLen:n,suffix:r,outputLen:o,rounds:s,enableXOF:i}=this;return e||(e=new qn(n,r,o,i,s)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=s,e.suffix=r,e.outputLen=o,e.enableXOF=i,e.destroyed=this.destroyed,e}}const Pi=(t,e,n)=>ae(()=>new qn(e,t,n)),Hi=Pi(1,136,256/8);function Di(t,e,n,r){if(typeof t.setBigUint64==\"function\")return t.setBigUint64(e,n,r);const o=BigInt(32),s=BigInt(4294967295),i=Number(n>>o&s),f=Number(n&s),c=r?4:0,u=r?0:4;t.setUint32(e+c,i,r),t.setUint32(e+u,f,r)}function Mi(t,e,n){return t&e^~t&n}function Vi(t,e,n){return t&e^t&n^e&n}class Rr extends Ie{constructor(e,n,r,o){super(),this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.blockLen=e,this.outputLen=n,this.padOffset=r,this.isLE=o,this.buffer=new Uint8Array(e),this.view=sn(this.buffer)}update(e){Nt(this),e=ht(e),at(e);const{view:n,buffer:r,blockLen:o}=this,s=e.length;for(let i=0;i<s;){const f=Math.min(o-this.pos,s-i);if(f===o){const c=sn(e);for(;o<=s-i;i+=o)this.process(c,i);continue}r.set(e.subarray(i,i+f),this.pos),this.pos+=f,i+=f,this.pos===o&&(this.process(n,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){Nt(this),on(e,this),this.finished=!0;const{buffer:n,view:r,blockLen:o,isLE:s}=this;let{pos:i}=this;n[i++]=128,ut(this.buffer.subarray(i)),this.padOffset>o-i&&(this.process(r,0),i=0);for(let l=i;l<o;l++)n[l]=0;Di(r,o-8,BigInt(this.length*8),s),this.process(r,0);const f=sn(e),c=this.outputLen;if(c%4)throw new Error(\"_sha2: outputLen should be aligned to 32bit\");const u=c/4,a=this.get();if(u>a.length)throw new Error(\"_sha2: outputLen bigger than state\");for(let l=0;l<u;l++)f.setUint32(4*l,a[l],s)}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:n,buffer:r,length:o,finished:s,destroyed:i,pos:f}=this;return e.destroyed=i,e.finished=s,e.length=o,e.pos=f,o%n&&e.buffer.set(r),e}clone(){return this._cloneInto()}}const Ut=Uint32Array.from([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),W=Uint32Array.from([3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]),Y=Uint32Array.from([1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209]),qi=Uint32Array.from([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),_t=new Uint32Array(64);class Ki extends Rr{constructor(e=32){super(64,e,8,!1),this.A=Ut[0]|0,this.B=Ut[1]|0,this.C=Ut[2]|0,this.D=Ut[3]|0,this.E=Ut[4]|0,this.F=Ut[5]|0,this.G=Ut[6]|0,this.H=Ut[7]|0}get(){const{A:e,B:n,C:r,D:o,E:s,F:i,G:f,H:c}=this;return[e,n,r,o,s,i,f,c]}set(e,n,r,o,s,i,f,c){this.A=e|0,this.B=n|0,this.C=r|0,this.D=o|0,this.E=s|0,this.F=i|0,this.G=f|0,this.H=c|0}process(e,n){for(let l=0;l<16;l++,n+=4)_t[l]=e.getUint32(n,!1);for(let l=16;l<64;l++){const h=_t[l-15],g=_t[l-2],m=gt(h,7)^gt(h,18)^h>>>3,b=gt(g,17)^gt(g,19)^g>>>10;_t[l]=b+_t[l-7]+m+_t[l-16]|0}let{A:r,B:o,C:s,D:i,E:f,F:c,G:u,H:a}=this;for(let l=0;l<64;l++){const h=gt(f,6)^gt(f,11)^gt(f,25),g=a+h+Mi(f,c,u)+qi[l]+_t[l]|0,b=(gt(r,2)^gt(r,13)^gt(r,22))+Vi(r,o,s)|0;a=u,u=c,c=f,f=i+g|0,i=s,s=o,o=r,r=g+b|0}r=r+this.A|0,o=o+this.B|0,s=s+this.C|0,i=i+this.D|0,f=f+this.E|0,c=c+this.F|0,u=u+this.G|0,a=a+this.H|0,this.set(r,o,s,i,f,c,u,a)}roundClean(){ut(_t)}destroy(){this.set(0,0,0,0,0,0,0,0),ut(this.buffer)}}const $r=wr([\"0x428a2f98d728ae22\",\"0x7137449123ef65cd\",\"0xb5c0fbcfec4d3b2f\",\"0xe9b5dba58189dbbc\",\"0x3956c25bf348b538\",\"0x59f111f1b605d019\",\"0x923f82a4af194f9b\",\"0xab1c5ed5da6d8118\",\"0xd807aa98a3030242\",\"0x12835b0145706fbe\",\"0x243185be4ee4b28c\",\"0x550c7dc3d5ffb4e2\",\"0x72be5d74f27b896f\",\"0x80deb1fe3b1696b1\",\"0x9bdc06a725c71235\",\"0xc19bf174cf692694\",\"0xe49b69c19ef14ad2\",\"0xefbe4786384f25e3\",\"0x0fc19dc68b8cd5b5\",\"0x240ca1cc77ac9c65\",\"0x2de92c6f592b0275\",\"0x4a7484aa6ea6e483\",\"0x5cb0a9dcbd41fbd4\",\"0x76f988da831153b5\",\"0x983e5152ee66dfab\",\"0xa831c66d2db43210\",\"0xb00327c898fb213f\",\"0xbf597fc7beef0ee4\",\"0xc6e00bf33da88fc2\",\"0xd5a79147930aa725\",\"0x06ca6351e003826f\",\"0x142929670a0e6e70\",\"0x27b70a8546d22ffc\",\"0x2e1b21385c26c926\",\"0x4d2c6dfc5ac42aed\",\"0x53380d139d95b3df\",\"0x650a73548baf63de\",\"0x766a0abb3c77b2a8\",\"0x81c2c92e47edaee6\",\"0x92722c851482353b\",\"0xa2bfe8a14cf10364\",\"0xa81a664bbc423001\",\"0xc24b8b70d0f89791\",\"0xc76c51a30654be30\",\"0xd192e819d6ef5218\",\"0xd69906245565a910\",\"0xf40e35855771202a\",\"0x106aa07032bbd1b8\",\"0x19a4c116b8d2d0c8\",\"0x1e376c085141ab53\",\"0x2748774cdf8eeb99\",\"0x34b0bcb5e19b48a8\",\"0x391c0cb3c5c95a63\",\"0x4ed8aa4ae3418acb\",\"0x5b9cca4f7763e373\",\"0x682e6ff3d6b2b8a3\",\"0x748f82ee5defb2fc\",\"0x78a5636f43172f60\",\"0x84c87814a1f0ab72\",\"0x8cc702081a6439ec\",\"0x90befffa23631e28\",\"0xa4506cebde82bde9\",\"0xbef9a3f7b2c67915\",\"0xc67178f2e372532b\",\"0xca273eceea26619c\",\"0xd186b8c721c0c207\",\"0xeada7dd6cde0eb1e\",\"0xf57d4f7fee6ed178\",\"0x06f067aa72176fba\",\"0x0a637dc5a2c898a6\",\"0x113f9804bef90dae\",\"0x1b710b35131c471b\",\"0x28db77f523047d84\",\"0x32caab7b40c72493\",\"0x3c9ebe0a15c9bebc\",\"0x431d67c49c100d4c\",\"0x4cc5d4becb3e42b6\",\"0x597f299cfc657e2a\",\"0x5fcb6fab3ad6faec\",\"0x6c44198c4a475817\"].map(t=>BigInt(t))),Fi=$r[0],zi=$r[1],Tt=new Uint32Array(80),Rt=new Uint32Array(80);class cn extends Rr{constructor(e=64){super(128,e,16,!1),this.Ah=Y[0]|0,this.Al=Y[1]|0,this.Bh=Y[2]|0,this.Bl=Y[3]|0,this.Ch=Y[4]|0,this.Cl=Y[5]|0,this.Dh=Y[6]|0,this.Dl=Y[7]|0,this.Eh=Y[8]|0,this.El=Y[9]|0,this.Fh=Y[10]|0,this.Fl=Y[11]|0,this.Gh=Y[12]|0,this.Gl=Y[13]|0,this.Hh=Y[14]|0,this.Hl=Y[15]|0}get(){const{Ah:e,Al:n,Bh:r,Bl:o,Ch:s,Cl:i,Dh:f,Dl:c,Eh:u,El:a,Fh:l,Fl:h,Gh:g,Gl:m,Hh:b,Hl:v}=this;return[e,n,r,o,s,i,f,c,u,a,l,h,g,m,b,v]}set(e,n,r,o,s,i,f,c,u,a,l,h,g,m,b,v){this.Ah=e|0,this.Al=n|0,this.Bh=r|0,this.Bl=o|0,this.Ch=s|0,this.Cl=i|0,this.Dh=f|0,this.Dl=c|0,this.Eh=u|0,this.El=a|0,this.Fh=l|0,this.Fl=h|0,this.Gh=g|0,this.Gl=m|0,this.Hh=b|0,this.Hl=v|0}process(e,n){for(let C=0;C<16;C++,n+=4)Tt[C]=e.getUint32(n),Rt[C]=e.getUint32(n+=4);for(let C=16;C<80;C++){const H=Tt[C-15]|0,_=Rt[C-15]|0,k=At(H,_,1)^At(H,_,8)^xr(H,_,7),P=St(H,_,1)^St(H,_,8)^vr(H,_,7),R=Tt[C-2]|0,d=Rt[C-2]|0,w=At(R,d,19)^se(R,d,61)^xr(R,d,6),p=St(R,d,19)^ie(R,d,61)^vr(R,d,6),y=Ei(P,p,Rt[C-7],Rt[C-16]),x=Bi(y,k,w,Tt[C-7],Tt[C-16]);Tt[C]=x|0,Rt[C]=y|0}let{Ah:r,Al:o,Bh:s,Bl:i,Ch:f,Cl:c,Dh:u,Dl:a,Eh:l,El:h,Fh:g,Fl:m,Gh:b,Gl:v,Hh:L,Hl:V}=this;for(let C=0;C<80;C++){const H=At(l,h,14)^At(l,h,18)^se(l,h,41),_=St(l,h,14)^St(l,h,18)^ie(l,h,41),k=l&g^~l&b,P=h&m^~h&v,R=Ii(V,_,P,zi[C],Rt[C]),d=Ai(R,L,H,k,Fi[C],Tt[C]),w=R|0,p=At(r,o,28)^se(r,o,34)^se(r,o,39),y=St(r,o,28)^ie(r,o,34)^ie(r,o,39),x=r&s^r&f^s&f,B=o&i^o&c^i&c;L=b|0,V=v|0,b=g|0,v=m|0,g=l|0,m=h|0,{h:l,l:h}=dt(u|0,a|0,d|0,w|0),u=f|0,a=c|0,f=s|0,c=i|0,s=r|0,i=o|0;const E=tn(w,y,B);r=en(E,d,p,x),o=E|0}({h:r,l:o}=dt(this.Ah|0,this.Al|0,r|0,o|0)),{h:s,l:i}=dt(this.Bh|0,this.Bl|0,s|0,i|0),{h:f,l:c}=dt(this.Ch|0,this.Cl|0,f|0,c|0),{h:u,l:a}=dt(this.Dh|0,this.Dl|0,u|0,a|0),{h:l,l:h}=dt(this.Eh|0,this.El|0,l|0,h|0),{h:g,l:m}=dt(this.Fh|0,this.Fl|0,g|0,m|0),{h:b,l:v}=dt(this.Gh|0,this.Gl|0,b|0,v|0),{h:L,l:V}=dt(this.Hh|0,this.Hl|0,L|0,V|0),this.set(r,o,s,i,f,c,u,a,l,h,g,m,b,v,L,V)}roundClean(){ut(Tt,Rt)}destroy(){ut(this.buffer),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}class Gi extends cn{constructor(){super(48),this.Ah=W[0]|0,this.Al=W[1]|0,this.Bh=W[2]|0,this.Bl=W[3]|0,this.Ch=W[4]|0,this.Cl=W[5]|0,this.Dh=W[6]|0,this.Dl=W[7]|0,this.Eh=W[8]|0,this.El=W[9]|0,this.Fh=W[10]|0,this.Fl=W[11]|0,this.Gh=W[12]|0,this.Gl=W[13]|0,this.Hh=W[14]|0,this.Hl=W[15]|0}}const X=Uint32Array.from([573645204,4230739756,2673172387,3360449730,596883563,1867755857,2520282905,1497426621,2519219938,2827943907,3193839141,1401305490,721525244,746961066,246885852,2177182882]);class Zi extends cn{constructor(){super(32),this.Ah=X[0]|0,this.Al=X[1]|0,this.Bh=X[2]|0,this.Bl=X[3]|0,this.Ch=X[4]|0,this.Cl=X[5]|0,this.Dh=X[6]|0,this.Dl=X[7]|0,this.Eh=X[8]|0,this.El=X[9]|0,this.Fh=X[10]|0,this.Fl=X[11]|0,this.Gh=X[12]|0,this.Gl=X[13]|0,this.Hh=X[14]|0,this.Hl=X[15]|0}}const Ae=ae(()=>new Ki),Wi=ae(()=>new cn),Yi=ae(()=>new Gi),Xi=ae(()=>new Zi),Ji=Uint8Array.from([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9]),F=Uint32Array.from([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),N=new Uint32Array(32);function $t(t,e,n,r,o,s){const i=o[s],f=o[s+1];let c=N[2*t],u=N[2*t+1],a=N[2*e],l=N[2*e+1],h=N[2*n],g=N[2*n+1],m=N[2*r],b=N[2*r+1],v=tn(c,a,i);u=en(v,u,l,f),c=v|0,{Dh:b,Dl:m}={Dh:b^u,Dl:m^c},{Dh:b,Dl:m}={Dh:bi(b,m),Dl:yi(b)},{h:g,l:h}=dt(g,h,b,m),{Bh:l,Bl:a}={Bh:l^g,Bl:a^h},{Bh:l,Bl:a}={Bh:At(l,a,24),Bl:St(l,a,24)},N[2*t]=c,N[2*t+1]=u,N[2*e]=a,N[2*e+1]=l,N[2*n]=h,N[2*n+1]=g,N[2*r]=m,N[2*r+1]=b}function Ct(t,e,n,r,o,s){const i=o[s],f=o[s+1];let c=N[2*t],u=N[2*t+1],a=N[2*e],l=N[2*e+1],h=N[2*n],g=N[2*n+1],m=N[2*r],b=N[2*r+1],v=tn(c,a,i);u=en(v,u,l,f),c=v|0,{Dh:b,Dl:m}={Dh:b^u,Dl:m^c},{Dh:b,Dl:m}={Dh:At(b,m,16),Dl:St(b,m,16)},{h:g,l:h}=dt(g,h,b,m),{Bh:l,Bl:a}={Bh:l^g,Bl:a^h},{Bh:l,Bl:a}={Bh:se(l,a,63),Bl:ie(l,a,63)},N[2*t]=c,N[2*t+1]=u,N[2*e]=a,N[2*e+1]=l,N[2*n]=h,N[2*n+1]=g,N[2*r]=m,N[2*r+1]=b}function Qi(t,e={},n,r,o){if(mt(n),t<0||t>n)throw new Error(\"outputLen bigger than keyLen\");const{key:s,salt:i,personalization:f}=e;if(s!==void 0&&(s.length<1||s.length>n))throw new Error(\"key length must be undefined or 1..\"+n);if(i!==void 0&&i.length!==r)throw new Error(\"salt must be undefined or \"+r);if(f!==void 0&&f.length!==o)throw new Error(\"personalization must be undefined or \"+o)}class tf extends Ie{constructor(e,n){super(),this.finished=!1,this.destroyed=!1,this.length=0,this.pos=0,mt(e),mt(n),this.blockLen=e,this.outputLen=n,this.buffer=new Uint8Array(e),this.buffer32=fe(this.buffer)}update(e){Nt(this),e=ht(e),at(e);const{blockLen:n,buffer:r,buffer32:o}=this,s=e.length,i=e.byteOffset,f=e.buffer;for(let c=0;c<s;){this.pos===n&&(Ot(o),this.compress(o,0,!1),Ot(o),this.pos=0);const u=Math.min(n-this.pos,s-c),a=i+c;if(u===n&&!(a%4)&&c+u<s){const l=new Uint32Array(f,a,Math.floor((s-c)/4));Ot(l);for(let h=0;c+n<s;h+=o.length,c+=n)this.length+=n,this.compress(l,h,!1);Ot(l);continue}r.set(e.subarray(c,c+u),this.pos),this.pos+=u,this.length+=u,c+=u}return this}digestInto(e){Nt(this),on(e,this);const{pos:n,buffer32:r}=this;this.finished=!0,ut(this.buffer.subarray(n)),Ot(r),this.compress(r,0,!0),Ot(r);const o=fe(e);this.get().forEach((s,i)=>o[i]=wt(s))}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}_cloneInto(e){const{buffer:n,length:r,finished:o,destroyed:s,outputLen:i,pos:f}=this;return e||(e=new this.constructor({dkLen:i})),e.set(...this.get()),e.buffer.set(n),e.destroyed=s,e.finished=o,e.length=r,e.pos=f,e.outputLen=i,e}clone(){return this._cloneInto()}}class ef extends tf{constructor(e={}){const n=e.dkLen===void 0?64:e.dkLen;super(128,n),this.v0l=F[0]|0,this.v0h=F[1]|0,this.v1l=F[2]|0,this.v1h=F[3]|0,this.v2l=F[4]|0,this.v2h=F[5]|0,this.v3l=F[6]|0,this.v3h=F[7]|0,this.v4l=F[8]|0,this.v4h=F[9]|0,this.v5l=F[10]|0,this.v5h=F[11]|0,this.v6l=F[12]|0,this.v6h=F[13]|0,this.v7l=F[14]|0,this.v7h=F[15]|0,Qi(n,e,64,16,16);let{key:r,personalization:o,salt:s}=e,i=0;if(r!==void 0&&(r=ht(r),i=r.length),this.v0l^=this.outputLen|i<<8|65536|1<<24,s!==void 0){s=ht(s);const f=fe(s);this.v4l^=wt(f[0]),this.v4h^=wt(f[1]),this.v5l^=wt(f[2]),this.v5h^=wt(f[3])}if(o!==void 0){o=ht(o);const f=fe(o);this.v6l^=wt(f[0]),this.v6h^=wt(f[1]),this.v7l^=wt(f[2]),this.v7h^=wt(f[3])}if(r!==void 0){const f=new Uint8Array(this.blockLen);f.set(r),this.update(f)}}get(){let{v0l:e,v0h:n,v1l:r,v1h:o,v2l:s,v2h:i,v3l:f,v3h:c,v4l:u,v4h:a,v5l:l,v5h:h,v6l:g,v6h:m,v7l:b,v7h:v}=this;return[e,n,r,o,s,i,f,c,u,a,l,h,g,m,b,v]}set(e,n,r,o,s,i,f,c,u,a,l,h,g,m,b,v){this.v0l=e|0,this.v0h=n|0,this.v1l=r|0,this.v1h=o|0,this.v2l=s|0,this.v2h=i|0,this.v3l=f|0,this.v3h=c|0,this.v4l=u|0,this.v4h=a|0,this.v5l=l|0,this.v5h=h|0,this.v6l=g|0,this.v6h=m|0,this.v7l=b|0,this.v7h=v|0}compress(e,n,r){this.get().forEach((c,u)=>N[u]=c),N.set(F,16);let{h:o,l:s}=mr(BigInt(this.length));N[24]=F[8]^s,N[25]=F[9]^o,r&&(N[28]=~N[28],N[29]=~N[29]);let i=0;const f=Ji;for(let c=0;c<12;c++)$t(0,4,8,12,e,n+2*f[i++]),Ct(0,4,8,12,e,n+2*f[i++]),$t(1,5,9,13,e,n+2*f[i++]),Ct(1,5,9,13,e,n+2*f[i++]),$t(2,6,10,14,e,n+2*f[i++]),Ct(2,6,10,14,e,n+2*f[i++]),$t(3,7,11,15,e,n+2*f[i++]),Ct(3,7,11,15,e,n+2*f[i++]),$t(0,5,10,15,e,n+2*f[i++]),Ct(0,5,10,15,e,n+2*f[i++]),$t(1,6,11,12,e,n+2*f[i++]),Ct(1,6,11,12,e,n+2*f[i++]),$t(2,7,8,13,e,n+2*f[i++]),Ct(2,7,8,13,e,n+2*f[i++]),$t(3,4,9,14,e,n+2*f[i++]),Ct(3,4,9,14,e,n+2*f[i++]);this.v0l^=N[0]^N[16],this.v0h^=N[1]^N[17],this.v1l^=N[2]^N[18],this.v1h^=N[3]^N[19],this.v2l^=N[4]^N[20],this.v2h^=N[5]^N[21],this.v3l^=N[6]^N[22],this.v3h^=N[7]^N[23],this.v4l^=N[8]^N[24],this.v4h^=N[9]^N[25],this.v5l^=N[10]^N[26],this.v5h^=N[11]^N[27],this.v6l^=N[12]^N[28],this.v6h^=N[13]^N[29],this.v7l^=N[14]^N[30],this.v7h^=N[15]^N[31],ut(N)}destroy(){this.destroyed=!0,ut(this.buffer32),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const nf=Ui(t=>new ef(t)),rf=\"https://rpc.walletconnect.org/v1\";function an(t){const e=`\u0019Ethereum Signed Message:\n${t.length}`,n=new TextEncoder().encode(e+t);return\"0x\"+Buffer.from(Hi(n)).toString(\"hex\")}async function Cr(t,e,n,r,o,s){switch(n.t){case\"eip191\":return await Lr(t,e,n.s);case\"eip1271\":return await jr(t,e,n.s,r,o,s);default:throw new Error(`verifySignature failed: Attempted to verify CacaoSignature with unknown type: ${n.t}`)}}async function Lr(t,e,n){return(await (0,viem__WEBPACK_IMPORTED_MODULE_9__.recoverAddress)({hash:an(e),signature:n})).toLowerCase()===t.toLowerCase()}async function jr(t,e,n,r,o,s){const i=Fe(r);if(!i.namespace||!i.reference)throw new Error(`isValidEip1271Signature failed: chainId must be in CAIP-2 format, received: ${r}`);try{const f=\"0x1626ba7e\",c=\"0000000000000000000000000000000000000000000000000000000000000040\",u=n.substring(2),a=(u.length/2).toString(16).padStart(64,\"0\"),l=(e.startsWith(\"0x\")?e:an(e)).substring(2),h=f+l+c+a+u,g=await fetch(`${s||rf}/?chainId=${r}&projectId=${o}`,{headers:{\"Content-Type\":\"application/json\"},method:\"POST\",body:JSON.stringify({id:of(),jsonrpc:\"2.0\",method:\"eth_call\",params:[{to:t,data:h},\"latest\"]})}),{result:m}=await g.json();return m?m.slice(0,f.length).toLowerCase()===f.toLowerCase():!1}catch(f){return console.error(\"isValidEip1271Signature: \",f),!1}}function of(){return Date.now()+Math.floor(Math.random()*1e3)}function sf(t){const e=atob(t),n=new Uint8Array(e.length);for(let i=0;i<e.length;i++)n[i]=e.charCodeAt(i);const r=n[0];if(r===0)throw new Error(\"No signatures found\");const o=1+r*64;if(n.length<o)throw new Error(\"Transaction data too short for claimed signature count\");if(n.length<100)throw new Error(\"Transaction too short\");const s=Buffer.from(t,\"base64\").slice(1,65);return bs58__WEBPACK_IMPORTED_MODULE_3__[\"default\"].encode(s)}function ff(t){const e=new Uint8Array(Buffer.from(t,\"base64\")),n=Array.from(\"TransactionData::\").map(s=>s.charCodeAt(0)),r=new Uint8Array(n.length+e.length);r.set(n),r.set(e,n.length);const o=nf(r,{dkLen:32});return bs58__WEBPACK_IMPORTED_MODULE_3__[\"default\"].encode(o)}function cf(t){const e=new Uint8Array(Ae(kr(t)));return bs58__WEBPACK_IMPORTED_MODULE_3__[\"default\"].encode(e)}function kr(t){if(t instanceof Uint8Array)return t;if(Array.isArray(t))return new Uint8Array(t);if(typeof t==\"object\"&&t!=null&&t.data)return new Uint8Array(Object.values(t.data));if(typeof t==\"object\"&&t)return new Uint8Array(Object.values(t));throw new Error(\"getNearUint8ArrayFromBytes: Unexpected result type from bytes array\")}function af(t){const e=Buffer.from(t,\"base64\"),n=(0,_msgpack_msgpack__WEBPACK_IMPORTED_MODULE_10__.decode)(e).txn;if(!n)throw new Error(\"Invalid signed transaction: missing 'txn' field\");const r=(0,_msgpack_msgpack__WEBPACK_IMPORTED_MODULE_11__.encode)(n),o=Buffer.from(\"TX\"),s=Buffer.concat([o,Buffer.from(r)]),i=Xi(s);return _scure_base__WEBPACK_IMPORTED_MODULE_12__.base32.encode(i).replace(/=+$/,\"\")}function un(t){const e=[];let n=BigInt(t);for(;n>=BigInt(128);)e.push(Number(n&BigInt(127)|BigInt(128))),n>>=BigInt(7);return e.push(Number(n)),Buffer.from(e)}function uf(t){const e=Buffer.from(t.signed.bodyBytes,\"base64\"),n=Buffer.from(t.signed.authInfoBytes,\"base64\"),r=Buffer.from(t.signature.signature,\"base64\"),o=[];o.push(Buffer.from([10])),o.push(un(e.length)),o.push(e),o.push(Buffer.from([18])),o.push(un(n.length)),o.push(n),o.push(Buffer.from([26])),o.push(un(r.length)),o.push(r);const s=Buffer.concat(o),i=Ae(s);return Buffer.from(i).toString(\"hex\").toUpperCase()}var lf=Object.defineProperty,df=Object.defineProperties,hf=Object.getOwnPropertyDescriptors,Pr=Object.getOwnPropertySymbols,pf=Object.prototype.hasOwnProperty,gf=Object.prototype.propertyIsEnumerable,Hr=(t,e,n)=>e in t?lf(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,ln=(t,e)=>{for(var n in e||(e={}))pf.call(e,n)&&Hr(t,n,e[n]);if(Pr)for(var n of Pr(e))gf.call(e,n)&&Hr(t,n,e[n]);return t},Dr=(t,e)=>df(t,hf(e));const bf=\"did:pkh:\",Se=t=>t?.split(\":\"),Mr=t=>{const e=t&&Se(t);if(e)return t.includes(bf)?e[3]:e[1]},Vr=t=>{const e=t&&Se(t);if(e)return e[2]+\":\"+e[3]},dn=t=>{const e=t&&Se(t);if(e)return e.pop()};async function yf(t){const{cacao:e,projectId:n}=t,{s:r,p:o}=e,s=qr(o,o.iss),i=dn(o.iss);return await Cr(i,s,r,Vr(o.iss),n)}const qr=(t,e)=>{const n=`${t.domain} wants you to sign in with your Ethereum account:`,r=dn(e);if(!t.aud&&!t.uri)throw new Error(\"Either `aud` or `uri` is required to construct the message\");let o=t.statement||void 0;const s=`URI: ${t.aud||t.uri}`,i=`Version: ${t.version}`,f=`Chain ID: ${Mr(e)}`,c=`Nonce: ${t.nonce}`,u=`Issued At: ${t.iat}`,a=t.exp?`Expiration Time: ${t.exp}`:void 0,l=t.nbf?`Not Before: ${t.nbf}`:void 0,h=t.requestId?`Request ID: ${t.requestId}`:void 0,g=t.resources?`Resources:${t.resources.map(b=>`\n- ${b}`).join(\"\")}`:void 0,m=Oe(t.resources);if(m){const b=Lt(m);o=gn(o,b)}return[n,r,\"\",o,\"\",s,i,f,c,u,a,l,h,g].filter(b=>b!=null).join(`\n`)};function mf(t,e,n){return n.includes(\"did:pkh:\")||(n=`did:pkh:${n}`),{h:{t:\"caip122\"},p:{iss:n,domain:t.domain,aud:t.aud,version:t.version,nonce:t.nonce,iat:t.iat,statement:t.statement,requestId:t.requestId,resources:t.resources,nbf:t.nbf,exp:t.exp},s:e}}function wf(t){var e;const{authPayload:n,chains:r,methods:o}=t,s=n.statement||\"\";if(!(r!=null&&r.length))return n;const i=n.chains,f=Je(i,r);if(!(f!=null&&f.length))throw new Error(\"No supported chains\");const c=Kr(n.resources);if(!c)return n;bt(c);const u=Fr(c,\"eip155\");let a=n?.resources||[];if(u!=null&&u.length){const l=zr(u),h=Je(l,o);if(!(h!=null&&h.length))throw new Error(`Supported methods don't satisfy the requested: ${JSON.stringify(l)}, supported: ${JSON.stringify(o)}`);const g=hn(\"request\",h,{chains:f}),m=Yr(c,\"eip155\",g);a=((e=n?.resources)==null?void 0:e.slice(0,-1))||[],a.push(Ne(m))}return Dr(ln({},n),{statement:Jr(s,Oe(a)),chains:f,resources:n!=null&&n.resources||a.length>0?a:void 0})}function Kr(t){const e=Oe(t);if(e&&pn(e))return Lt(e)}function xf(t,e){var n;return(n=t?.att)==null?void 0:n.hasOwnProperty(e)}function Fr(t,e){var n,r;return(n=t?.att)!=null&&n[e]?Object.keys((r=t?.att)==null?void 0:r[e]):[]}function vf(t){return t?.map(e=>Object.keys(e))||[]}function zr(t){return t?.map(e=>{var n;return(n=e.split(\"/\"))==null?void 0:n[1]})||[]}function Gr(t){return Buffer.from(JSON.stringify(t)).toString(\"base64\")}function Zr(t){return JSON.parse(Buffer.from(t,\"base64\").toString(\"utf-8\"))}function bt(t){if(!t)throw new Error(\"No recap provided, value is undefined\");if(!t.att)throw new Error(\"No `att` property found\");const e=Object.keys(t.att);if(!(e!=null&&e.length))throw new Error(\"No resources found in `att` property\");e.forEach(n=>{const r=t.att[n];if(Array.isArray(r))throw new Error(`Resource must be an object: ${n}`);if(typeof r!=\"object\")throw new Error(`Resource must be an object: ${n}`);if(!Object.keys(r).length)throw new Error(`Resource object is empty: ${n}`);Object.keys(r).forEach(o=>{const s=r[o];if(!Array.isArray(s))throw new Error(`Ability limits ${o} must be an array of objects, found: ${s}`);if(!s.length)throw new Error(`Value of ${o} is empty array, must be an array with objects`);s.forEach(i=>{if(typeof i!=\"object\")throw new Error(`Ability limits (${o}) must be an array of objects, found: ${i}`)})})})}function Wr(t,e,n,r={}){return n?.sort((o,s)=>o.localeCompare(s)),{att:{[t]:hn(e,n,r)}}}function Yr(t,e,n){var r;t.att[e]=ln({},n);const o=(r=Object.keys(t.att))==null?void 0:r.sort((i,f)=>i.localeCompare(f)),s={att:{}};return o.reduce((i,f)=>(i.att[f]=t.att[f],i),s)}function hn(t,e,n={}){e=e?.sort((o,s)=>o.localeCompare(s));const r=e.map(o=>({[`${t}/${o}`]:[n]}));return Object.assign({},...r)}function Ne(t){return bt(t),`urn:recap:${Gr(t).replace(/=/g,\"\")}`}function Lt(t){const e=Zr(t.replace(\"urn:recap:\",\"\"));return bt(e),e}function Ef(t,e,n){const r=Wr(t,e,n);return Ne(r)}function pn(t){return t&&t.includes(\"urn:recap:\")}function Bf(t,e){const n=Lt(t),r=Lt(e),o=Xr(n,r);return Ne(o)}function Xr(t,e){bt(t),bt(e);const n=Object.keys(t.att).concat(Object.keys(e.att)).sort((o,s)=>o.localeCompare(s)),r={att:{}};return n.forEach(o=>{var s,i;Object.keys(((s=t.att)==null?void 0:s[o])||{}).concat(Object.keys(((i=e.att)==null?void 0:i[o])||{})).sort((f,c)=>f.localeCompare(c)).forEach(f=>{var c,u;r.att[o]=Dr(ln({},r.att[o]),{[f]:((c=t.att[o])==null?void 0:c[f])||((u=e.att[o])==null?void 0:u[f])})})}),r}function gn(t=\"\",e){bt(e);const n=\"I further authorize the stated URI to perform the following actions on my behalf: \";if(t.includes(n))return t;const r=[];let o=0;Object.keys(e.att).forEach(f=>{const c=Object.keys(e.att[f]).map(l=>({ability:l.split(\"/\")[0],action:l.split(\"/\")[1]}));c.sort((l,h)=>l.action.localeCompare(h.action));const u={};c.forEach(l=>{u[l.ability]||(u[l.ability]=[]),u[l.ability].push(l.action)});const a=Object.keys(u).map(l=>(o++,`(${o}) '${l}': '${u[l].join(\"', '\")}' for '${f}'.`));r.push(a.join(\", \").replace(\".,\",\".\"))});const s=r.join(\" \"),i=`${n}${s}`;return`${t?t+\" \":\"\"}${i}`}function If(t){var e;const n=Lt(t);bt(n);const r=(e=n.att)==null?void 0:e.eip155;return r?Object.keys(r).map(o=>o.split(\"/\")[1]):[]}function Af(t){const e=Lt(t);bt(e);const n=[];return Object.values(e.att).forEach(r=>{Object.values(r).forEach(o=>{var s;(s=o?.[0])!=null&&s.chains&&n.push(o[0].chains)})}),[...new Set(n.flat())]}function Jr(t,e){if(!e)return t;const n=Lt(e);return bt(n),gn(t,n)}function Oe(t){if(!t)return;const e=t?.[t.length-1];return pn(e)?e:void 0}/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */function Qr(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name===\"Uint8Array\"}function bn(t){if(typeof t!=\"boolean\")throw new Error(`boolean expected, not ${t}`)}function yn(t){if(!Number.isSafeInteger(t)||t<0)throw new Error(\"positive integer expected, got \"+t)}function nt(t,...e){if(!Qr(t))throw new Error(\"Uint8Array expected\");if(e.length>0&&!e.includes(t.length))throw new Error(\"Uint8Array expected of length \"+e+\", got length=\"+t.length)}function to(t,e=!0){if(t.destroyed)throw new Error(\"Hash instance has been destroyed\");if(e&&t.finished)throw new Error(\"Hash#digest() has already been called\")}function Sf(t,e){nt(t);const n=e.outputLen;if(t.length<n)throw new Error(\"digestInto() expects output buffer of length at least \"+n)}function jt(t){return new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4))}function Wt(...t){for(let e=0;e<t.length;e++)t[e].fill(0)}function Nf(t){return new DataView(t.buffer,t.byteOffset,t.byteLength)}const Of=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function Uf(t){if(typeof t!=\"string\")throw new Error(\"string expected\");return new Uint8Array(new TextEncoder().encode(t))}function mn(t){if(typeof t==\"string\")t=Uf(t);else if(Qr(t))t=wn(t);else throw new Error(\"Uint8Array expected, got \"+typeof t);return t}function _f(t,e){if(e==null||typeof e!=\"object\")throw new Error(\"options must be defined\");return Object.assign(t,e)}function Tf(t,e){if(t.length!==e.length)return!1;let n=0;for(let r=0;r<t.length;r++)n|=t[r]^e[r];return n===0}const Rf=(t,e)=>{function n(r,...o){if(nt(r),!Of)throw new Error(\"Non little-endian hardware is not yet supported\");if(t.nonceLength!==void 0){const a=o[0];if(!a)throw new Error(\"nonce / iv required\");t.varSizeNonce?nt(a):nt(a,t.nonceLength)}const s=t.tagLength;s&&o[1]!==void 0&&nt(o[1]);const i=e(r,...o),f=(a,l)=>{if(l!==void 0){if(a!==2)throw new Error(\"cipher output not supported\");nt(l)}};let c=!1;return{encrypt(a,l){if(c)throw new Error(\"cannot encrypt() twice with same key + nonce\");return c=!0,nt(a),f(i.encrypt.length,l),i.encrypt(a,l)},decrypt(a,l){if(nt(a),s&&a.length<s)throw new Error(\"invalid ciphertext length: smaller than tagLength=\"+s);return f(i.decrypt.length,l),i.decrypt(a,l)}}}return Object.assign(n,t),n};function eo(t,e,n=!0){if(e===void 0)return new Uint8Array(t);if(e.length!==t)throw new Error(\"invalid output length, expected \"+t+\", got: \"+e.length);if(n&&!Cf(e))throw new Error(\"invalid output, must be aligned\");return e}function no(t,e,n,r){if(typeof t.setBigUint64==\"function\")return t.setBigUint64(e,n,r);const o=BigInt(32),s=BigInt(4294967295),i=Number(n>>o&s),f=Number(n&s),c=r?4:0,u=r?0:4;t.setUint32(e+c,i,r),t.setUint32(e+u,f,r)}function $f(t,e,n){bn(n);const r=new Uint8Array(16),o=Nf(r);return no(o,0,BigInt(e),n),no(o,8,BigInt(t),n),r}function Cf(t){return t.byteOffset%4===0}function wn(t){return Uint8Array.from(t)}const ro=t=>Uint8Array.from(t.split(\"\").map(e=>e.charCodeAt(0))),Lf=ro(\"expand 16-byte k\"),jf=ro(\"expand 32-byte k\"),kf=jt(Lf),Pf=jt(jf);function M(t,e){return t<<e|t>>>32-e}function xn(t){return t.byteOffset%4===0}const Ue=64,Hf=16,oo=2**32-1,so=new Uint32Array;function Df(t,e,n,r,o,s,i,f){const c=o.length,u=new Uint8Array(Ue),a=jt(u),l=xn(o)&&xn(s),h=l?jt(o):so,g=l?jt(s):so;for(let m=0;m<c;i++){if(t(e,n,r,a,i,f),i>=oo)throw new Error(\"arx: counter overflow\");const b=Math.min(Ue,c-m);if(l&&b===Ue){const v=m/4;if(m%4!==0)throw new Error(\"arx: invalid block position\");for(let L=0,V;L<Hf;L++)V=v+L,g[V]=h[V]^a[L];m+=Ue;continue}for(let v=0,L;v<b;v++)L=m+v,s[L]=o[L]^u[v];m+=b}}function Mf(t,e){const{allowShortKeys:n,extendNonceFn:r,counterLength:o,counterRight:s,rounds:i}=_f({allowShortKeys:!1,counterLength:8,counterRight:!1,rounds:20},e);if(typeof t!=\"function\")throw new Error(\"core must be a function\");return yn(o),yn(i),bn(s),bn(n),(f,c,u,a,l=0)=>{nt(f),nt(c),nt(u);const h=u.length;if(a===void 0&&(a=new Uint8Array(h)),nt(a),yn(l),l<0||l>=oo)throw new Error(\"arx: counter overflow\");if(a.length<h)throw new Error(`arx: output (${a.length}) is shorter than data (${h})`);const g=[];let m=f.length,b,v;if(m===32)g.push(b=wn(f)),v=Pf;else if(m===16&&n)b=new Uint8Array(32),b.set(f),b.set(f,16),v=kf,g.push(b);else throw new Error(`arx: invalid 32-byte key, got length=${m}`);xn(c)||g.push(c=wn(c));const L=jt(b);if(r){if(c.length!==24)throw new Error(\"arx: extended nonce must be 24 bytes\");r(v,L,jt(c.subarray(0,16)),L),c=c.subarray(16)}const V=16-o;if(V!==c.length)throw new Error(`arx: nonce must be ${V} or 16 bytes`);if(V!==12){const H=new Uint8Array(12);H.set(c,s?0:12-c.length),c=H,g.push(c)}const C=jt(c);return Df(t,v,L,C,u,a,l,i),Wt(...g),a}}const G=(t,e)=>t[e++]&255|(t[e++]&255)<<8;class Vf{constructor(e){this.blockLen=16,this.outputLen=16,this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.pos=0,this.finished=!1,e=mn(e),nt(e,32);const n=G(e,0),r=G(e,2),o=G(e,4),s=G(e,6),i=G(e,8),f=G(e,10),c=G(e,12),u=G(e,14);this.r[0]=n&8191,this.r[1]=(n>>>13|r<<3)&8191,this.r[2]=(r>>>10|o<<6)&7939,this.r[3]=(o>>>7|s<<9)&8191,this.r[4]=(s>>>4|i<<12)&255,this.r[5]=i>>>1&8190,this.r[6]=(i>>>14|f<<2)&8191,this.r[7]=(f>>>11|c<<5)&8065,this.r[8]=(c>>>8|u<<8)&8191,this.r[9]=u>>>5&127;for(let a=0;a<8;a++)this.pad[a]=G(e,16+2*a)}process(e,n,r=!1){const o=r?0:2048,{h:s,r:i}=this,f=i[0],c=i[1],u=i[2],a=i[3],l=i[4],h=i[5],g=i[6],m=i[7],b=i[8],v=i[9],L=G(e,n+0),V=G(e,n+2),C=G(e,n+4),H=G(e,n+6),_=G(e,n+8),k=G(e,n+10),P=G(e,n+12),R=G(e,n+14);let d=s[0]+(L&8191),w=s[1]+((L>>>13|V<<3)&8191),p=s[2]+((V>>>10|C<<6)&8191),y=s[3]+((C>>>7|H<<9)&8191),x=s[4]+((H>>>4|_<<12)&8191),B=s[5]+(_>>>1&8191),E=s[6]+((_>>>14|k<<2)&8191),I=s[7]+((k>>>11|P<<5)&8191),S=s[8]+((P>>>8|R<<8)&8191),O=s[9]+(R>>>5|o),A=0,T=A+d*f+w*(5*v)+p*(5*b)+y*(5*m)+x*(5*g);A=T>>>13,T&=8191,T+=B*(5*h)+E*(5*l)+I*(5*a)+S*(5*u)+O*(5*c),A+=T>>>13,T&=8191;let U=A+d*c+w*f+p*(5*v)+y*(5*b)+x*(5*m);A=U>>>13,U&=8191,U+=B*(5*g)+E*(5*h)+I*(5*l)+S*(5*a)+O*(5*u),A+=U>>>13,U&=8191;let $=A+d*u+w*c+p*f+y*(5*v)+x*(5*b);A=$>>>13,$&=8191,$+=B*(5*m)+E*(5*g)+I*(5*h)+S*(5*l)+O*(5*a),A+=$>>>13,$&=8191;let D=A+d*a+w*u+p*c+y*f+x*(5*v);A=D>>>13,D&=8191,D+=B*(5*b)+E*(5*m)+I*(5*g)+S*(5*h)+O*(5*l),A+=D>>>13,D&=8191;let q=A+d*l+w*a+p*u+y*c+x*f;A=q>>>13,q&=8191,q+=B*(5*v)+E*(5*b)+I*(5*m)+S*(5*g)+O*(5*h),A+=q>>>13,q&=8191;let j=A+d*h+w*l+p*a+y*u+x*c;A=j>>>13,j&=8191,j+=B*f+E*(5*v)+I*(5*b)+S*(5*m)+O*(5*g),A+=j>>>13,j&=8191;let K=A+d*g+w*h+p*l+y*a+x*u;A=K>>>13,K&=8191,K+=B*c+E*f+I*(5*v)+S*(5*b)+O*(5*m),A+=K>>>13,K&=8191;let et=A+d*m+w*g+p*h+y*l+x*a;A=et>>>13,et&=8191,et+=B*u+E*c+I*f+S*(5*v)+O*(5*b),A+=et>>>13,et&=8191;let Z=A+d*b+w*m+p*g+y*h+x*l;A=Z>>>13,Z&=8191,Z+=B*a+E*u+I*c+S*f+O*(5*v),A+=Z>>>13,Z&=8191;let z=A+d*v+w*b+p*m+y*g+x*h;A=z>>>13,z&=8191,z+=B*l+E*a+I*u+S*c+O*f,A+=z>>>13,z&=8191,A=(A<<2)+A|0,A=A+T|0,T=A&8191,A=A>>>13,U+=A,s[0]=T,s[1]=U,s[2]=$,s[3]=D,s[4]=q,s[5]=j,s[6]=K,s[7]=et,s[8]=Z,s[9]=z}finalize(){const{h:e,pad:n}=this,r=new Uint16Array(10);let o=e[1]>>>13;e[1]&=8191;for(let f=2;f<10;f++)e[f]+=o,o=e[f]>>>13,e[f]&=8191;e[0]+=o*5,o=e[0]>>>13,e[0]&=8191,e[1]+=o,o=e[1]>>>13,e[1]&=8191,e[2]+=o,r[0]=e[0]+5,o=r[0]>>>13,r[0]&=8191;for(let f=1;f<10;f++)r[f]=e[f]+o,o=r[f]>>>13,r[f]&=8191;r[9]-=8192;let s=(o^1)-1;for(let f=0;f<10;f++)r[f]&=s;s=~s;for(let f=0;f<10;f++)e[f]=e[f]&s|r[f];e[0]=(e[0]|e[1]<<13)&65535,e[1]=(e[1]>>>3|e[2]<<10)&65535,e[2]=(e[2]>>>6|e[3]<<7)&65535,e[3]=(e[3]>>>9|e[4]<<4)&65535,e[4]=(e[4]>>>12|e[5]<<1|e[6]<<14)&65535,e[5]=(e[6]>>>2|e[7]<<11)&65535,e[6]=(e[7]>>>5|e[8]<<8)&65535,e[7]=(e[8]>>>8|e[9]<<5)&65535;let i=e[0]+n[0];e[0]=i&65535;for(let f=1;f<8;f++)i=(e[f]+n[f]|0)+(i>>>16)|0,e[f]=i&65535;Wt(r)}update(e){to(this),e=mn(e),nt(e);const{buffer:n,blockLen:r}=this,o=e.length;for(let s=0;s<o;){const i=Math.min(r-this.pos,o-s);if(i===r){for(;r<=o-s;s+=r)this.process(e,s);continue}n.set(e.subarray(s,s+i),this.pos),this.pos+=i,s+=i,this.pos===r&&(this.process(n,0,!1),this.pos=0)}return this}destroy(){Wt(this.h,this.r,this.buffer,this.pad)}digestInto(e){to(this),Sf(e,this),this.finished=!0;const{buffer:n,h:r}=this;let{pos:o}=this;if(o){for(n[o++]=1;o<16;o++)n[o]=0;this.process(n,0,!0)}this.finalize();let s=0;for(let i=0;i<8;i++)e[s++]=r[i]>>>0,e[s++]=r[i]>>>8;return e}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const r=e.slice(0,n);return this.destroy(),r}}function qf(t){const e=(r,o)=>t(o).update(mn(r)).digest(),n=t(new Uint8Array(32));return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=r=>t(r),e}const Kf=qf(t=>new Vf(t));function Ff(t,e,n,r,o,s=20){let i=t[0],f=t[1],c=t[2],u=t[3],a=e[0],l=e[1],h=e[2],g=e[3],m=e[4],b=e[5],v=e[6],L=e[7],V=o,C=n[0],H=n[1],_=n[2],k=i,P=f,R=c,d=u,w=a,p=l,y=h,x=g,B=m,E=b,I=v,S=L,O=V,A=C,T=H,U=_;for(let D=0;D<s;D+=2)k=k+w|0,O=M(O^k,16),B=B+O|0,w=M(w^B,12),k=k+w|0,O=M(O^k,8),B=B+O|0,w=M(w^B,7),P=P+p|0,A=M(A^P,16),E=E+A|0,p=M(p^E,12),P=P+p|0,A=M(A^P,8),E=E+A|0,p=M(p^E,7),R=R+y|0,T=M(T^R,16),I=I+T|0,y=M(y^I,12),R=R+y|0,T=M(T^R,8),I=I+T|0,y=M(y^I,7),d=d+x|0,U=M(U^d,16),S=S+U|0,x=M(x^S,12),d=d+x|0,U=M(U^d,8),S=S+U|0,x=M(x^S,7),k=k+p|0,U=M(U^k,16),I=I+U|0,p=M(p^I,12),k=k+p|0,U=M(U^k,8),I=I+U|0,p=M(p^I,7),P=P+y|0,O=M(O^P,16),S=S+O|0,y=M(y^S,12),P=P+y|0,O=M(O^P,8),S=S+O|0,y=M(y^S,7),R=R+x|0,A=M(A^R,16),B=B+A|0,x=M(x^B,12),R=R+x|0,A=M(A^R,8),B=B+A|0,x=M(x^B,7),d=d+w|0,T=M(T^d,16),E=E+T|0,w=M(w^E,12),d=d+w|0,T=M(T^d,8),E=E+T|0,w=M(w^E,7);let $=0;r[$++]=i+k|0,r[$++]=f+P|0,r[$++]=c+R|0,r[$++]=u+d|0,r[$++]=a+w|0,r[$++]=l+p|0,r[$++]=h+y|0,r[$++]=g+x|0,r[$++]=m+B|0,r[$++]=b+E|0,r[$++]=v+I|0,r[$++]=L+S|0,r[$++]=V+O|0,r[$++]=C+A|0,r[$++]=H+T|0,r[$++]=_+U|0}const zf=Mf(Ff,{counterRight:!1,counterLength:4,allowShortKeys:!1}),Gf=new Uint8Array(16),io=(t,e)=>{t.update(e);const n=e.length%16;n&&t.update(Gf.subarray(n))},Zf=new Uint8Array(32);function fo(t,e,n,r,o){const s=t(e,n,Zf),i=Kf.create(s);o&&io(i,o),io(i,r);const f=$f(r.length,o?o.length:0,!0);i.update(f);const c=i.digest();return Wt(s,f),c}const Wf=t=>(e,n,r)=>({encrypt(s,i){const f=s.length;i=eo(f+16,i,!1),i.set(s);const c=i.subarray(0,-16);t(e,n,c,c,1);const u=fo(t,e,n,c,r);return i.set(u,f),Wt(u),i},decrypt(s,i){i=eo(s.length-16,i,!1);const f=s.subarray(0,-16),c=s.subarray(-16),u=fo(t,e,n,f,r);if(!Tf(c,u))throw new Error(\"invalid tag\");return i.set(s.subarray(0,-16)),t(e,n,i,i,1),Wt(u),i}}),co=Rf({blockSize:64,nonceLength:12,tagLength:16},Wf(zf));class ao extends Ie{constructor(e,n){super(),this.finished=!1,this.destroyed=!1,rn(e);const r=ht(n);if(this.iHash=e.create(),typeof this.iHash.update!=\"function\")throw new Error(\"Expected instance of class which extends utils.Hash\");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const o=this.blockLen,s=new Uint8Array(o);s.set(r.length>o?e.create().update(r).digest():r);for(let i=0;i<s.length;i++)s[i]^=54;this.iHash.update(s),this.oHash=e.create();for(let i=0;i<s.length;i++)s[i]^=106;this.oHash.update(s),ut(s)}update(e){return Nt(this),this.iHash.update(e),this}digestInto(e){Nt(this),at(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:n,iHash:r,finished:o,destroyed:s,blockLen:i,outputLen:f}=this;return e=e,e.finished=o,e.destroyed=s,e.blockLen=i,e.outputLen=f,e.oHash=n._cloneInto(e.oHash),e.iHash=r._cloneInto(e.iHash),e}clone(){return this._cloneInto()}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const _e=(t,e,n)=>new ao(t,e).update(n).digest();_e.create=(t,e)=>new ao(t,e);function Yf(t,e,n){return rn(t),n===void 0&&(n=new Uint8Array(t.outputLen)),_e(t,ht(n),ht(e))}const vn=Uint8Array.from([0]),uo=Uint8Array.of();function Xf(t,e,n,r=32){rn(t),mt(r);const o=t.outputLen;if(r>255*o)throw new Error(\"Length should be <= 255*HashLen\");const s=Math.ceil(r/o);n===void 0&&(n=uo);const i=new Uint8Array(s*o),f=_e.create(t,e),c=f._cloneInto(),u=new Uint8Array(f.outputLen);for(let a=0;a<s;a++)vn[0]=a+1,c.update(a===0?uo:u).update(n).update(vn).digestInto(u),i.set(u,o*a),f._cloneInto(c);return f.destroy(),c.destroy(),ut(u,vn),i.slice(0,r)}const Jf=(t,e,n,r,o)=>Xf(t,Yf(t,e,n),r,o),Te=Ae,En=BigInt(0),Bn=BigInt(1);function Re(t,e){if(typeof e!=\"boolean\")throw new Error(t+\" boolean expected, got \"+e)}function $e(t){const e=t.toString(16);return e.length&1?\"0\"+e:e}function lo(t){if(typeof t!=\"string\")throw new Error(\"hex string expected, got \"+typeof t);return t===\"\"?En:BigInt(\"0x\"+t)}function Ce(t){return lo(ce(t))}function Le(t){return at(t),lo(ce(Uint8Array.from(t).reverse()))}function In(t,e){return fn(t.toString(16).padStart(e*2,\"0\"))}function An(t,e){return In(t,e).reverse()}function rt(t,e,n){let r;if(typeof e==\"string\")try{r=fn(e)}catch(s){throw new Error(t+\" must be hex string or Uint8Array, cause: \"+s)}else if(nn(e))r=Uint8Array.from(e);else throw new Error(t+\" must be hex string or Uint8Array\");const o=r.length;if(typeof n==\"number\"&&o!==n)throw new Error(t+\" of length \"+n+\" expected, got \"+o);return r}const Sn=t=>typeof t==\"bigint\"&&En<=t;function Qf(t,e,n){return Sn(t)&&Sn(e)&&Sn(n)&&e<=t&&t<n}function Nn(t,e,n,r){if(!Qf(e,n,r))throw new Error(\"expected valid \"+t+\": \"+n+\" <= n < \"+r+\", got \"+e)}function tc(t){let e;for(e=0;t>En;t>>=Bn,e+=1);return e}const je=t=>(Bn<<BigInt(t))-Bn;function ec(t,e,n){if(typeof t!=\"number\"||t<2)throw new Error(\"hashLen must be a number\");if(typeof e!=\"number\"||e<2)throw new Error(\"qByteLen must be a number\");if(typeof n!=\"function\")throw new Error(\"hmacFn must be a function\");const r=g=>new Uint8Array(g),o=g=>Uint8Array.of(g);let s=r(t),i=r(t),f=0;const c=()=>{s.fill(1),i.fill(0),f=0},u=(...g)=>n(i,s,...g),a=(g=r(0))=>{i=u(o(0),g),s=u(),g.length!==0&&(i=u(o(1),g),s=u())},l=()=>{if(f++>=1e3)throw new Error(\"drbg: tried 1000 values\");let g=0;const m=[];for(;g<e;){s=u();const b=s.slice();m.push(b),g+=s.length}return Ht(...m)};return(g,m)=>{c(),a(g);let b;for(;!(b=m(l()));)a();return c(),b}}function ke(t,e,n={}){if(!t||typeof t!=\"object\")throw new Error(\"expected valid options object\");function r(o,s,i){const f=t[o];if(i&&f===void 0)return;const c=typeof f;if(c!==s||f===null)throw new Error(`param \"${o}\" is invalid: expected ${s}, got ${c}`)}Object.entries(e).forEach(([o,s])=>r(o,s,!1)),Object.entries(n).forEach(([o,s])=>r(o,s,!0))}function ho(t){const e=new WeakMap;return(n,...r)=>{const o=e.get(n);if(o!==void 0)return o;const s=t(n,...r);return e.set(n,s),s}}const ot=BigInt(0),Q=BigInt(1),Dt=BigInt(2),nc=BigInt(3),po=BigInt(4),go=BigInt(5),bo=BigInt(8);function lt(t,e){const n=t%e;return n>=ot?n:e+n}function pt(t,e,n){let r=t;for(;e-- >ot;)r*=r,r%=n;return r}function yo(t,e){if(t===ot)throw new Error(\"invert: expected non-zero number\");if(e<=ot)throw new Error(\"invert: expected positive modulus, got \"+e);let n=lt(t,e),r=e,o=ot,s=Q;for(;n!==ot;){const f=r/n,c=r%n,u=o-s*f;r=n,n=c,o=s,s=u}if(r!==Q)throw new Error(\"invert: does not exist\");return lt(o,e)}function mo(t,e){const n=(t.ORDER+Q)/po,r=t.pow(e,n);if(!t.eql(t.sqr(r),e))throw new Error(\"Cannot find square root\");return r}function rc(t,e){const n=(t.ORDER-go)/bo,r=t.mul(e,Dt),o=t.pow(r,n),s=t.mul(e,o),i=t.mul(t.mul(s,Dt),o),f=t.mul(s,t.sub(i,t.ONE));if(!t.eql(t.sqr(f),e))throw new Error(\"Cannot find square root\");return f}function oc(t){if(t<BigInt(3))throw new Error(\"sqrt is not defined for small field\");let e=t-Q,n=0;for(;e%Dt===ot;)e/=Dt,n++;let r=Dt;const o=Yt(t);for(;xo(o,r)===1;)if(r++>1e3)throw new Error(\"Cannot find square root: probably non-prime P\");if(n===1)return mo;let s=o.pow(r,e);const i=(e+Q)/Dt;return function(c,u){if(c.is0(u))return u;if(xo(c,u)!==1)throw new Error(\"Cannot find square root\");let a=n,l=c.mul(c.ONE,s),h=c.pow(u,e),g=c.pow(u,i);for(;!c.eql(h,c.ONE);){if(c.is0(h))return c.ZERO;let m=1,b=c.sqr(h);for(;!c.eql(b,c.ONE);)if(m++,b=c.sqr(b),m===a)throw new Error(\"Cannot find square root\");const v=Q<<BigInt(a-m-1),L=c.pow(l,v);a=m,l=c.sqr(L),h=c.mul(h,l),g=c.mul(g,L)}return g}}function sc(t){return t%po===nc?mo:t%bo===go?rc:oc(t)}const ic=[\"create\",\"isValid\",\"is0\",\"neg\",\"inv\",\"sqrt\",\"sqr\",\"eql\",\"add\",\"sub\",\"mul\",\"pow\",\"div\",\"addN\",\"subN\",\"mulN\",\"sqrN\"];function fc(t){const e={ORDER:\"bigint\",MASK:\"bigint\",BYTES:\"number\",BITS:\"number\"},n=ic.reduce((r,o)=>(r[o]=\"function\",r),e);return ke(t,n),t}function cc(t,e,n){if(n<ot)throw new Error(\"invalid exponent, negatives unsupported\");if(n===ot)return t.ONE;if(n===Q)return e;let r=t.ONE,o=e;for(;n>ot;)n&Q&&(r=t.mul(r,o)),o=t.sqr(o),n>>=Q;return r}function wo(t,e,n=!1){const r=new Array(e.length).fill(n?t.ZERO:void 0),o=e.reduce((i,f,c)=>t.is0(f)?i:(r[c]=i,t.mul(i,f)),t.ONE),s=t.inv(o);return e.reduceRight((i,f,c)=>t.is0(f)?i:(r[c]=t.mul(i,r[c]),t.mul(i,f)),s),r}function xo(t,e){const n=(t.ORDER-Q)/Dt,r=t.pow(e,n),o=t.eql(r,t.ONE),s=t.eql(r,t.ZERO),i=t.eql(r,t.neg(t.ONE));if(!o&&!s&&!i)throw new Error(\"invalid Legendre symbol result\");return o?1:s?0:-1}function ac(t,e){e!==void 0&&mt(e);const n=e!==void 0?e:t.toString(2).length,r=Math.ceil(n/8);return{nBitLength:n,nByteLength:r}}function Yt(t,e,n=!1,r={}){if(t<=ot)throw new Error(\"invalid field: expected ORDER > 0, got \"+t);let o,s;if(typeof e==\"object\"&&e!=null){if(r.sqrt||n)throw new Error(\"cannot specify opts in two arguments\");const a=e;a.BITS&&(o=a.BITS),a.sqrt&&(s=a.sqrt),typeof a.isLE==\"boolean\"&&(n=a.isLE)}else typeof e==\"number\"&&(o=e),r.sqrt&&(s=r.sqrt);const{nBitLength:i,nByteLength:f}=ac(t,o);if(f>2048)throw new Error(\"invalid field: expected ORDER of <= 2048 bytes\");let c;const u=Object.freeze({ORDER:t,isLE:n,BITS:i,BYTES:f,MASK:je(i),ZERO:ot,ONE:Q,create:a=>lt(a,t),isValid:a=>{if(typeof a!=\"bigint\")throw new Error(\"invalid field element: expected bigint, got \"+typeof a);return ot<=a&&a<t},is0:a=>a===ot,isValidNot0:a=>!u.is0(a)&&u.isValid(a),isOdd:a=>(a&Q)===Q,neg:a=>lt(-a,t),eql:(a,l)=>a===l,sqr:a=>lt(a*a,t),add:(a,l)=>lt(a+l,t),sub:(a,l)=>lt(a-l,t),mul:(a,l)=>lt(a*l,t),pow:(a,l)=>cc(u,a,l),div:(a,l)=>lt(a*yo(l,t),t),sqrN:a=>a*a,addN:(a,l)=>a+l,subN:(a,l)=>a-l,mulN:(a,l)=>a*l,inv:a=>yo(a,t),sqrt:s||(a=>(c||(c=sc(t)),c(u,a))),toBytes:a=>n?An(a,f):In(a,f),fromBytes:a=>{if(a.length!==f)throw new Error(\"Field.fromBytes: expected \"+f+\" bytes, got \"+a.length);return n?Le(a):Ce(a)},invertBatch:a=>wo(u,a),cmov:(a,l,h)=>h?l:a});return Object.freeze(u)}function vo(t){if(typeof t!=\"bigint\")throw new Error(\"field order must be bigint\");const e=t.toString(2).length;return Math.ceil(e/8)}function Eo(t){const e=vo(t);return e+Math.ceil(e/2)}function uc(t,e,n=!1){const r=t.length,o=vo(e),s=Eo(e);if(r<16||r<s||r>1024)throw new Error(\"expected \"+s+\"-1024 bytes of input, got \"+r);const i=n?Le(t):Ce(t),f=lt(i,e-Q)+Q;return n?An(f,o):In(f,o)}const Xt=BigInt(0),Mt=BigInt(1);function le(t,e){const n=e.negate();return t?n:e}function lc(t,e,n){const r=e===\"pz\"?i=>i.pz:i=>i.ez,o=wo(t.Fp,n.map(r));return n.map((i,f)=>i.toAffine(o[f])).map(t.fromAffine)}function Bo(t,e){if(!Number.isSafeInteger(t)||t<=0||t>e)throw new Error(\"invalid window size, expected [1..\"+e+\"], got W=\"+t)}function On(t,e){Bo(t,e);const n=Math.ceil(e/t)+1,r=2**(t-1),o=2**t,s=je(t),i=BigInt(t);return{windows:n,windowSize:r,mask:s,maxNumber:o,shiftBy:i}}function Io(t,e,n){const{windowSize:r,mask:o,maxNumber:s,shiftBy:i}=n;let f=Number(t&o),c=t>>i;f>r&&(f-=s,c+=Mt);const u=e*r,a=u+Math.abs(f)-1,l=f===0,h=f<0,g=e%2!==0;return{nextN:c,offset:a,isZero:l,isNeg:h,isNegF:g,offsetF:u}}function dc(t,e){if(!Array.isArray(t))throw new Error(\"array expected\");t.forEach((n,r)=>{if(!(n instanceof e))throw new Error(\"invalid point at index \"+r)})}function hc(t,e){if(!Array.isArray(t))throw new Error(\"array of scalars expected\");t.forEach((n,r)=>{if(!e.isValid(n))throw new Error(\"invalid scalar at index \"+r)})}const Un=new WeakMap,Ao=new WeakMap;function _n(t){return Ao.get(t)||1}function So(t){if(t!==Xt)throw new Error(\"invalid wNAF\")}function pc(t,e){return{constTimeNegate:le,hasPrecomputes(n){return _n(n)!==1},unsafeLadder(n,r,o=t.ZERO){let s=n;for(;r>Xt;)r&Mt&&(o=o.add(s)),s=s.double(),r>>=Mt;return o},precomputeWindow(n,r){const{windows:o,windowSize:s}=On(r,e),i=[];let f=n,c=f;for(let u=0;u<o;u++){c=f,i.push(c);for(let a=1;a<s;a++)c=c.add(f),i.push(c);f=c.double()}return i},wNAF(n,r,o){let s=t.ZERO,i=t.BASE;const f=On(n,e);for(let c=0;c<f.windows;c++){const{nextN:u,offset:a,isZero:l,isNeg:h,isNegF:g,offsetF:m}=Io(o,c,f);o=u,l?i=i.add(le(g,r[m])):s=s.add(le(h,r[a]))}return So(o),{p:s,f:i}},wNAFUnsafe(n,r,o,s=t.ZERO){const i=On(n,e);for(let f=0;f<i.windows&&o!==Xt;f++){const{nextN:c,offset:u,isZero:a,isNeg:l}=Io(o,f,i);if(o=c,!a){const h=r[u];s=s.add(l?h.negate():h)}}return So(o),s},getPrecomputes(n,r,o){let s=Un.get(r);return s||(s=this.precomputeWindow(r,n),n!==1&&(typeof o==\"function\"&&(s=o(s)),Un.set(r,s))),s},wNAFCached(n,r,o){const s=_n(n);return this.wNAF(s,this.getPrecomputes(s,n,o),r)},wNAFCachedUnsafe(n,r,o,s){const i=_n(n);return i===1?this.unsafeLadder(n,r,s):this.wNAFUnsafe(i,this.getPrecomputes(i,n,o),r,s)},setWindowSize(n,r){Bo(r,e),Ao.set(n,r),Un.delete(n)}}}function gc(t,e,n,r){let o=e,s=t.ZERO,i=t.ZERO;for(;n>Xt||r>Xt;)n&Mt&&(s=s.add(o)),r&Mt&&(i=i.add(o)),o=o.double(),n>>=Mt,r>>=Mt;return{p1:s,p2:i}}function bc(t,e,n,r){dc(n,t),hc(r,e);const o=n.length,s=r.length;if(o!==s)throw new Error(\"arrays of points and scalars must have equal length\");const i=t.ZERO,f=tc(BigInt(o));let c=1;f>12?c=f-3:f>4?c=f-2:f>0&&(c=2);const u=je(c),a=new Array(Number(u)+1).fill(i),l=Math.floor((e.BITS-1)/c)*c;let h=i;for(let g=l;g>=0;g-=c){a.fill(i);for(let b=0;b<s;b++){const v=r[b],L=Number(v>>BigInt(g)&u);a[L]=a[L].add(n[b])}let m=i;for(let b=a.length-1,v=i;b>0;b--)v=v.add(a[b]),m=m.add(v);if(h=h.add(m),g!==0)for(let b=0;b<c;b++)h=h.double()}return h}function No(t,e){if(e){if(e.ORDER!==t)throw new Error(\"Field.ORDER must match order: Fp == p, Fn == n\");return fc(e),e}else return Yt(t)}function yc(t,e,n={}){if(!e||typeof e!=\"object\")throw new Error(`expected valid ${t} CURVE object`);for(const f of[\"p\",\"n\",\"h\"]){const c=e[f];if(!(typeof c==\"bigint\"&&c>Xt))throw new Error(`CURVE.${f} must be positive bigint`)}const r=No(e.p,n.Fp),o=No(e.n,n.Fn),i=[\"Gx\",\"Gy\",\"a\",t===\"weierstrass\"?\"b\":\"d\"];for(const f of i)if(!r.isValid(e[f]))throw new Error(`CURVE.${f} must be valid field element of CURVE.Fp`);return{Fp:r,Fn:o}}BigInt(0),BigInt(1),BigInt(2),BigInt(8);const de=BigInt(0),Jt=BigInt(1),Pe=BigInt(2);function mc(t){return ke(t,{adjustScalarBytes:\"function\",powPminus2:\"function\"}),Object.freeze({...t})}function wc(t){const e=mc(t),{P:n,type:r,adjustScalarBytes:o,powPminus2:s,randomBytes:i}=e,f=r===\"x25519\";if(!f&&r!==\"x448\")throw new Error(\"invalid type\");const c=i||Zt,u=f?255:448,a=f?32:56,l=BigInt(f?9:5),h=BigInt(f?121665:39081),g=f?Pe**BigInt(254):Pe**BigInt(447),m=f?BigInt(8)*Pe**BigInt(251)-Jt:BigInt(4)*Pe**BigInt(445)-Jt,b=g+m+Jt,v=d=>lt(d,n),L=V(l);function V(d){return An(v(d),a)}function C(d){const w=rt(\"u coordinate\",d,a);return f&&(w[31]&=127),v(Le(w))}function H(d){return Le(o(rt(\"scalar\",d,a)))}function _(d,w){const p=R(C(w),H(d));if(p===de)throw new Error(\"invalid private or public key received\");return V(p)}function k(d){return _(d,L)}function P(d,w,p){const y=v(d*(w-p));return w=v(w-y),p=v(p+y),{x_2:w,x_3:p}}function R(d,w){Nn(\"u\",d,de,n),Nn(\"scalar\",w,g,b);const p=w,y=d;let x=Jt,B=de,E=d,I=Jt,S=de;for(let A=BigInt(u-1);A>=de;A--){const T=p>>A&Jt;S^=T,{x_2:x,x_3:E}=P(S,x,E),{x_2:B,x_3:I}=P(S,B,I),S=T;const U=x+B,$=v(U*U),D=x-B,q=v(D*D),j=$-q,K=E+I,et=E-I,Z=v(et*U),z=v(K*D),Ft=Z+z,yt=Z-z;E=v(Ft*Ft),I=v(y*v(yt*yt)),x=v($*q),B=v(j*($+v(h*j)))}({x_2:x,x_3:E}=P(S,x,E)),{x_2:B,x_3:I}=P(S,B,I);const O=s(B);return v(x*O)}return{scalarMult:_,scalarMultBase:k,getSharedSecret:(d,w)=>_(d,w),getPublicKey:d=>k(d),utils:{randomPrivateKey:()=>c(a)},GuBytes:L.slice()}}BigInt(0);const xc=BigInt(1),Oo=BigInt(2),vc=BigInt(3),Ec=BigInt(5),Bc=BigInt(8),Uo={p:BigInt(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed\"),n:BigInt(\"0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed\"),h:Bc,a:BigInt(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec\"),d:BigInt(\"0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3\"),Gx:BigInt(\"0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a\"),Gy:BigInt(\"0x6666666666666666666666666666666666666666666666666666666666666658\")};function Ic(t){const e=BigInt(10),n=BigInt(20),r=BigInt(40),o=BigInt(80),s=Uo.p,f=t*t%s*t%s,c=pt(f,Oo,s)*f%s,u=pt(c,xc,s)*t%s,a=pt(u,Ec,s)*u%s,l=pt(a,e,s)*a%s,h=pt(l,n,s)*l%s,g=pt(h,r,s)*h%s,m=pt(g,o,s)*g%s,b=pt(m,o,s)*g%s,v=pt(b,e,s)*a%s;return{pow_p_5_8:pt(v,Oo,s)*t%s,b2:f}}function Ac(t){return t[0]&=248,t[31]&=127,t[31]|=64,t}const Tn=(()=>{const t=Uo.p;return wc({P:t,type:\"x25519\",powPminus2:e=>{const{pow_p_5_8:n,b2:r}=Ic(e);return lt(pt(n,vc,t)*r,t)},adjustScalarBytes:Ac})})();function _o(t){t.lowS!==void 0&&Re(\"lowS\",t.lowS),t.prehash!==void 0&&Re(\"prehash\",t.prehash)}class Sc extends Error{constructor(e=\"\"){super(e)}}const vt={Err:Sc,_tlv:{encode:(t,e)=>{const{Err:n}=vt;if(t<0||t>256)throw new n(\"tlv.encode: wrong tag\");if(e.length&1)throw new n(\"tlv.encode: unpadded data\");const r=e.length/2,o=$e(r);if(o.length/2&128)throw new n(\"tlv.encode: long form length too big\");const s=r>127?$e(o.length/2|128):\"\";return $e(t)+s+o+e},decode(t,e){const{Err:n}=vt;let r=0;if(t<0||t>256)throw new n(\"tlv.encode: wrong tag\");if(e.length<2||e[r++]!==t)throw new n(\"tlv.decode: wrong tlv\");const o=e[r++],s=!!(o&128);let i=0;if(!s)i=o;else{const c=o&127;if(!c)throw new n(\"tlv.decode(long): indefinite length not supported\");if(c>4)throw new n(\"tlv.decode(long): byte length is too big\");const u=e.subarray(r,r+c);if(u.length!==c)throw new n(\"tlv.decode: length bytes not complete\");if(u[0]===0)throw new n(\"tlv.decode(long): zero leftmost byte\");for(const a of u)i=i<<8|a;if(r+=c,i<128)throw new n(\"tlv.decode(long): not minimal encoding\")}const f=e.subarray(r,r+i);if(f.length!==i)throw new n(\"tlv.decode: wrong value length\");return{v:f,l:e.subarray(r+i)}}},_int:{encode(t){const{Err:e}=vt;if(t<he)throw new e(\"integer: negative integers are not allowed\");let n=$e(t);if(Number.parseInt(n[0],16)&8&&(n=\"00\"+n),n.length&1)throw new e(\"unexpected DER parsing assertion: unpadded hex\");return n},decode(t){const{Err:e}=vt;if(t[0]&128)throw new e(\"invalid signature integer: negative\");if(t[0]===0&&!(t[1]&128))throw new e(\"invalid signature integer: unnecessary leading zero\");return Ce(t)}},toSig(t){const{Err:e,_int:n,_tlv:r}=vt,o=rt(\"signature\",t),{v:s,l:i}=r.decode(48,o);if(i.length)throw new e(\"invalid signature: left bytes after parsing\");const{v:f,l:c}=r.decode(2,s),{v:u,l:a}=r.decode(2,c);if(a.length)throw new e(\"invalid signature: left bytes after parsing\");return{r:n.decode(f),s:n.decode(u)}},hexFromSig(t){const{_tlv:e,_int:n}=vt,r=e.encode(2,n.encode(t.r)),o=e.encode(2,n.encode(t.s)),s=r+o;return e.encode(48,s)}},he=BigInt(0),pe=BigInt(1),Nc=BigInt(2),He=BigInt(3),Oc=BigInt(4);function Uc(t,e,n){function r(o){const s=t.sqr(o),i=t.mul(s,o);return t.add(t.add(i,t.mul(o,e)),n)}return r}function To(t,e,n){const{BYTES:r}=t;function o(s){let i;if(typeof s==\"bigint\")i=s;else{let f=rt(\"private key\",s);if(e){if(!e.includes(f.length*2))throw new Error(\"invalid private key\");const c=new Uint8Array(r);c.set(f,c.length-f.length),f=c}try{i=t.fromBytes(f)}catch{throw new Error(`invalid private key: expected ui8a of size ${r}, got ${typeof s}`)}}if(n&&(i=t.create(i)),!t.isValidNot0(i))throw new Error(\"invalid private key: out of range [1..N-1]\");return i}return o}function _c(t,e={}){const{Fp:n,Fn:r}=yc(\"weierstrass\",t,e),{h:o,n:s}=t;ke(e,{},{allowInfinityPoint:\"boolean\",clearCofactor:\"function\",isTorsionFree:\"function\",fromBytes:\"function\",toBytes:\"function\",endo:\"object\",wrapPrivateKey:\"boolean\"});const{endo:i}=e;if(i&&(!n.is0(t.a)||typeof i.beta!=\"bigint\"||typeof i.splitScalar!=\"function\"))throw new Error('invalid endo: expected \"beta\": bigint and \"splitScalar\": function');function f(){if(!n.isOdd)throw new Error(\"compression is not supported: Field does not have .isOdd()\")}function c(R,d,w){const{x:p,y}=d.toAffine(),x=n.toBytes(p);if(Re(\"isCompressed\",w),w){f();const B=!n.isOdd(y);return Ht(Ro(B),x)}else return Ht(Uint8Array.of(4),x,n.toBytes(y))}function u(R){at(R);const d=n.BYTES,w=d+1,p=2*d+1,y=R.length,x=R[0],B=R.subarray(1);if(y===w&&(x===2||x===3)){const E=n.fromBytes(B);if(!n.isValid(E))throw new Error(\"bad point: is not on curve, wrong x\");const I=h(E);let S;try{S=n.sqrt(I)}catch(T){const U=T instanceof Error?\": \"+T.message:\"\";throw new Error(\"bad point: is not on curve, sqrt error\"+U)}f();const O=n.isOdd(S);return(x&1)===1!==O&&(S=n.neg(S)),{x:E,y:S}}else if(y===p&&x===4){const E=n.fromBytes(B.subarray(d*0,d*1)),I=n.fromBytes(B.subarray(d*1,d*2));if(!g(E,I))throw new Error(\"bad point: is not on curve\");return{x:E,y:I}}else throw new Error(`bad point: got length ${y}, expected compressed=${w} or uncompressed=${p}`)}const a=e.toBytes||c,l=e.fromBytes||u,h=Uc(n,t.a,t.b);function g(R,d){const w=n.sqr(d),p=h(R);return n.eql(w,p)}if(!g(t.Gx,t.Gy))throw new Error(\"bad curve params: generator point\");const m=n.mul(n.pow(t.a,He),Oc),b=n.mul(n.sqr(t.b),BigInt(27));if(n.is0(n.add(m,b)))throw new Error(\"bad curve params: a or b\");function v(R,d,w=!1){if(!n.isValid(d)||w&&n.is0(d))throw new Error(`bad point coordinate ${R}`);return d}function L(R){if(!(R instanceof _))throw new Error(\"ProjectivePoint expected\")}const V=ho((R,d)=>{const{px:w,py:p,pz:y}=R;if(n.eql(y,n.ONE))return{x:w,y:p};const x=R.is0();d==null&&(d=x?n.ONE:n.inv(y));const B=n.mul(w,d),E=n.mul(p,d),I=n.mul(y,d);if(x)return{x:n.ZERO,y:n.ZERO};if(!n.eql(I,n.ONE))throw new Error(\"invZ was invalid\");return{x:B,y:E}}),C=ho(R=>{if(R.is0()){if(e.allowInfinityPoint&&!n.is0(R.py))return;throw new Error(\"bad point: ZERO\")}const{x:d,y:w}=R.toAffine();if(!n.isValid(d)||!n.isValid(w))throw new Error(\"bad point: x or y not field elements\");if(!g(d,w))throw new Error(\"bad point: equation left != right\");if(!R.isTorsionFree())throw new Error(\"bad point: not in prime-order subgroup\");return!0});function H(R,d,w,p,y){return w=new _(n.mul(w.px,R),w.py,w.pz),d=le(p,d),w=le(y,w),d.add(w)}class _{constructor(d,w,p){this.px=v(\"x\",d),this.py=v(\"y\",w,!0),this.pz=v(\"z\",p),Object.freeze(this)}static fromAffine(d){const{x:w,y:p}=d||{};if(!d||!n.isValid(w)||!n.isValid(p))throw new Error(\"invalid affine point\");if(d instanceof _)throw new Error(\"projective point not allowed\");return n.is0(w)&&n.is0(p)?_.ZERO:new _(w,p,n.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(d){return lc(_,\"pz\",d)}static fromBytes(d){return at(d),_.fromHex(d)}static fromHex(d){const w=_.fromAffine(l(rt(\"pointHex\",d)));return w.assertValidity(),w}static fromPrivateKey(d){const w=To(r,e.allowedPrivateKeyLengths,e.wrapPrivateKey);return _.BASE.multiply(w(d))}static msm(d,w){return bc(_,r,d,w)}precompute(d=8,w=!0){return P.setWindowSize(this,d),w||this.multiply(He),this}_setWindowSize(d){this.precompute(d)}assertValidity(){C(this)}hasEvenY(){const{y:d}=this.toAffine();if(!n.isOdd)throw new Error(\"Field doesn't support isOdd\");return!n.isOdd(d)}equals(d){L(d);const{px:w,py:p,pz:y}=this,{px:x,py:B,pz:E}=d,I=n.eql(n.mul(w,E),n.mul(x,y)),S=n.eql(n.mul(p,E),n.mul(B,y));return I&&S}negate(){return new _(this.px,n.neg(this.py),this.pz)}double(){const{a:d,b:w}=t,p=n.mul(w,He),{px:y,py:x,pz:B}=this;let E=n.ZERO,I=n.ZERO,S=n.ZERO,O=n.mul(y,y),A=n.mul(x,x),T=n.mul(B,B),U=n.mul(y,x);return U=n.add(U,U),S=n.mul(y,B),S=n.add(S,S),E=n.mul(d,S),I=n.mul(p,T),I=n.add(E,I),E=n.sub(A,I),I=n.add(A,I),I=n.mul(E,I),E=n.mul(U,E),S=n.mul(p,S),T=n.mul(d,T),U=n.sub(O,T),U=n.mul(d,U),U=n.add(U,S),S=n.add(O,O),O=n.add(S,O),O=n.add(O,T),O=n.mul(O,U),I=n.add(I,O),T=n.mul(x,B),T=n.add(T,T),O=n.mul(T,U),E=n.sub(E,O),S=n.mul(T,A),S=n.add(S,S),S=n.add(S,S),new _(E,I,S)}add(d){L(d);const{px:w,py:p,pz:y}=this,{px:x,py:B,pz:E}=d;let I=n.ZERO,S=n.ZERO,O=n.ZERO;const A=t.a,T=n.mul(t.b,He);let U=n.mul(w,x),$=n.mul(p,B),D=n.mul(y,E),q=n.add(w,p),j=n.add(x,B);q=n.mul(q,j),j=n.add(U,$),q=n.sub(q,j),j=n.add(w,y);let K=n.add(x,E);return j=n.mul(j,K),K=n.add(U,D),j=n.sub(j,K),K=n.add(p,y),I=n.add(B,E),K=n.mul(K,I),I=n.add($,D),K=n.sub(K,I),O=n.mul(A,j),I=n.mul(T,D),O=n.add(I,O),I=n.sub($,O),O=n.add($,O),S=n.mul(I,O),$=n.add(U,U),$=n.add($,U),D=n.mul(A,D),j=n.mul(T,j),$=n.add($,D),D=n.sub(U,D),D=n.mul(A,D),j=n.add(j,D),U=n.mul($,j),S=n.add(S,U),U=n.mul(K,j),I=n.mul(q,I),I=n.sub(I,U),U=n.mul(q,$),O=n.mul(K,O),O=n.add(O,U),new _(I,S,O)}subtract(d){return this.add(d.negate())}is0(){return this.equals(_.ZERO)}multiply(d){const{endo:w}=e;if(!r.isValidNot0(d))throw new Error(\"invalid scalar: out of range\");let p,y;const x=B=>P.wNAFCached(this,B,_.normalizeZ);if(w){const{k1neg:B,k1:E,k2neg:I,k2:S}=w.splitScalar(d),{p:O,f:A}=x(E),{p:T,f:U}=x(S);y=A.add(U),p=H(w.beta,O,T,B,I)}else{const{p:B,f:E}=x(d);p=B,y=E}return _.normalizeZ([p,y])[0]}multiplyUnsafe(d){const{endo:w}=e,p=this;if(!r.isValid(d))throw new Error(\"invalid scalar: out of range\");if(d===he||p.is0())return _.ZERO;if(d===pe)return p;if(P.hasPrecomputes(this))return this.multiply(d);if(w){const{k1neg:y,k1:x,k2neg:B,k2:E}=w.splitScalar(d),{p1:I,p2:S}=gc(_,p,x,E);return H(w.beta,I,S,y,B)}else return P.wNAFCachedUnsafe(p,d)}multiplyAndAddUnsafe(d,w,p){const y=this.multiplyUnsafe(w).add(d.multiplyUnsafe(p));return y.is0()?void 0:y}toAffine(d){return V(this,d)}isTorsionFree(){const{isTorsionFree:d}=e;return o===pe?!0:d?d(_,this):P.wNAFCachedUnsafe(this,s).is0()}clearCofactor(){const{clearCofactor:d}=e;return o===pe?this:d?d(_,this):this.multiplyUnsafe(o)}toBytes(d=!0){return Re(\"isCompressed\",d),this.assertValidity(),a(_,this,d)}toRawBytes(d=!0){return this.toBytes(d)}toHex(d=!0){return ce(this.toBytes(d))}toString(){return`<Point ${this.is0()?\"ZERO\":this.toHex()}>`}}_.BASE=new _(t.Gx,t.Gy,n.ONE),_.ZERO=new _(n.ZERO,n.ONE,n.ZERO),_.Fp=n,_.Fn=r;const k=r.BITS,P=pc(_,e.endo?Math.ceil(k/2):k);return _}function Ro(t){return Uint8Array.of(t?2:3)}function Tc(t,e,n={}){ke(e,{hash:\"function\"},{hmac:\"function\",lowS:\"boolean\",randomBytes:\"function\",bits2int:\"function\",bits2int_modN:\"function\"});const r=e.randomBytes||Zt,o=e.hmac||((p,...y)=>_e(e.hash,p,Ht(...y))),{Fp:s,Fn:i}=t,{ORDER:f,BITS:c}=i;function u(p){const y=f>>pe;return p>y}function a(p){return u(p)?i.neg(p):p}function l(p,y){if(!i.isValidNot0(y))throw new Error(`invalid signature ${p}: out of range 1..CURVE.n`)}class h{constructor(y,x,B){l(\"r\",y),l(\"s\",x),this.r=y,this.s=x,B!=null&&(this.recovery=B),Object.freeze(this)}static fromCompact(y){const x=i.BYTES,B=rt(\"compactSignature\",y,x*2);return new h(i.fromBytes(B.subarray(0,x)),i.fromBytes(B.subarray(x,x*2)))}static fromDER(y){const{r:x,s:B}=vt.toSig(rt(\"DER\",y));return new h(x,B)}assertValidity(){}addRecoveryBit(y){return new h(this.r,this.s,y)}recoverPublicKey(y){const x=s.ORDER,{r:B,s:E,recovery:I}=this;if(I==null||![0,1,2,3].includes(I))throw new Error(\"recovery id invalid\");if(f*Nc<x&&I>1)throw new Error(\"recovery id is ambiguous for h>1 curve\");const O=I===2||I===3?B+f:B;if(!s.isValid(O))throw new Error(\"recovery id 2 or 3 invalid\");const A=s.toBytes(O),T=t.fromHex(Ht(Ro((I&1)===0),A)),U=i.inv(O),$=C(rt(\"msgHash\",y)),D=i.create(-$*U),q=i.create(E*U),j=t.BASE.multiplyUnsafe(D).add(T.multiplyUnsafe(q));if(j.is0())throw new Error(\"point at infinify\");return j.assertValidity(),j}hasHighS(){return u(this.s)}normalizeS(){return this.hasHighS()?new h(this.r,i.neg(this.s),this.recovery):this}toBytes(y){if(y===\"compact\")return Ht(i.toBytes(this.r),i.toBytes(this.s));if(y===\"der\")return fn(vt.hexFromSig(this));throw new Error(\"invalid format\")}toDERRawBytes(){return this.toBytes(\"der\")}toDERHex(){return ce(this.toBytes(\"der\"))}toCompactRawBytes(){return this.toBytes(\"compact\")}toCompactHex(){return ce(this.toBytes(\"compact\"))}}const g=To(i,n.allowedPrivateKeyLengths,n.wrapPrivateKey),m={isValidPrivateKey(p){try{return g(p),!0}catch{return!1}},normPrivateKeyToScalar:g,randomPrivateKey:()=>{const p=f;return uc(r(Eo(p)),p)},precompute(p=8,y=t.BASE){return y.precompute(p,!1)}};function b(p,y=!0){return t.fromPrivateKey(p).toBytes(y)}function v(p){if(typeof p==\"bigint\")return!1;if(p instanceof t)return!0;const x=rt(\"key\",p).length,B=s.BYTES,E=B+1,I=2*B+1;if(!(n.allowedPrivateKeyLengths||i.BYTES===E))return x===E||x===I}function L(p,y,x=!0){if(v(p)===!0)throw new Error(\"first arg must be private key\");if(v(y)===!1)throw new Error(\"second arg must be public key\");return t.fromHex(y).multiply(g(p)).toBytes(x)}const V=e.bits2int||function(p){if(p.length>8192)throw new Error(\"input is too large\");const y=Ce(p),x=p.length*8-c;return x>0?y>>BigInt(x):y},C=e.bits2int_modN||function(p){return i.create(V(p))},H=je(c);function _(p){return Nn(\"num < 2^\"+c,p,he,H),i.toBytes(p)}function k(p,y,x=P){if([\"recovered\",\"canonical\"].some(q=>q in x))throw new Error(\"sign() legacy options not supported\");const{hash:B}=e;let{lowS:E,prehash:I,extraEntropy:S}=x;E==null&&(E=!0),p=rt(\"msgHash\",p),_o(x),I&&(p=rt(\"prehashed msgHash\",B(p)));const O=C(p),A=g(y),T=[_(A),_(O)];if(S!=null&&S!==!1){const q=S===!0?r(s.BYTES):S;T.push(rt(\"extraEntropy\",q))}const U=Ht(...T),$=O;function D(q){const j=V(q);if(!i.isValidNot0(j))return;const K=i.inv(j),et=t.BASE.multiply(j).toAffine(),Z=i.create(et.x);if(Z===he)return;const z=i.create(K*i.create($+Z*A));if(z===he)return;let Ft=(et.x===Z?0:2)|Number(et.y&pe),yt=z;return E&&u(z)&&(yt=a(z),Ft^=1),new h(Z,yt,Ft)}return{seed:U,k2sig:D}}const P={lowS:e.lowS,prehash:!1},R={lowS:e.lowS,prehash:!1};function d(p,y,x=P){const{seed:B,k2sig:E}=k(p,y,x);return ec(e.hash.outputLen,i.BYTES,o)(B,E)}t.BASE.precompute(8);function w(p,y,x,B=R){const E=p;y=rt(\"msgHash\",y),x=rt(\"publicKey\",x),_o(B);const{lowS:I,prehash:S,format:O}=B;if(\"strict\"in B)throw new Error(\"options.strict was renamed to lowS\");if(O!==void 0&&![\"compact\",\"der\",\"js\"].includes(O))throw new Error('format must be \"compact\", \"der\" or \"js\"');const A=typeof E==\"string\"||nn(E),T=!A&&!O&&typeof E==\"object\"&&E!==null&&typeof E.r==\"bigint\"&&typeof E.s==\"bigint\";if(!A&&!T)throw new Error(\"invalid signature, expected Uint8Array, hex string or Signature instance\");let U,$;try{if(T)if(O===void 0||O===\"js\")U=new h(E.r,E.s);else throw new Error(\"invalid format\");if(A){try{O!==\"compact\"&&(U=h.fromDER(E))}catch(yt){if(!(yt instanceof vt.Err))throw yt}!U&&O!==\"der\"&&(U=h.fromCompact(E))}$=t.fromHex(x)}catch{return!1}if(!U||I&&U.hasHighS())return!1;S&&(y=e.hash(y));const{r:D,s:q}=U,j=C(y),K=i.inv(q),et=i.create(j*K),Z=i.create(D*K),z=t.BASE.multiplyUnsafe(et).add($.multiplyUnsafe(Z));return z.is0()?!1:i.create(z.x)===D}return Object.freeze({getPublicKey:b,getSharedSecret:L,sign:d,verify:w,utils:m,Point:t,Signature:h})}function Rc(t){const e={a:t.a,b:t.b,p:t.Fp.ORDER,n:t.n,h:t.h,Gx:t.Gx,Gy:t.Gy},n=t.Fp,r=Yt(e.n,t.nBitLength),o={Fp:n,Fn:r,allowedPrivateKeyLengths:t.allowedPrivateKeyLengths,allowInfinityPoint:t.allowInfinityPoint,endo:t.endo,wrapPrivateKey:t.wrapPrivateKey,isTorsionFree:t.isTorsionFree,clearCofactor:t.clearCofactor,fromBytes:t.fromBytes,toBytes:t.toBytes};return{CURVE:e,curveOpts:o}}function $c(t){const{CURVE:e,curveOpts:n}=Rc(t),r={hash:t.hash,hmac:t.hmac,randomBytes:t.randomBytes,lowS:t.lowS,bits2int:t.bits2int,bits2int_modN:t.bits2int_modN};return{CURVE:e,curveOpts:n,ecdsaOpts:r}}function Cc(t,e){return Object.assign({},e,{ProjectivePoint:e.Point,CURVE:t})}function Lc(t){const{CURVE:e,curveOpts:n,ecdsaOpts:r}=$c(t),o=_c(e,n),s=Tc(o,r,n);return Cc(t,s)}function Rn(t,e){const n=r=>Lc({...t,hash:r});return{...n(e),create:n}}const $o={p:BigInt(\"0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff\"),n:BigInt(\"0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551\"),h:BigInt(1),a:BigInt(\"0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc\"),b:BigInt(\"0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b\"),Gx:BigInt(\"0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296\"),Gy:BigInt(\"0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5\")},Co={p:BigInt(\"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff\"),n:BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffc7634d81f4372ddf581a0db248b0a77aecec196accc52973\"),h:BigInt(1),a:BigInt(\"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000fffffffc\"),b:BigInt(\"0xb3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef\"),Gx:BigInt(\"0xaa87ca22be8b05378eb1c71ef320ad746e1d3b628ba79b9859f741e082542a385502f25dbf55296c3a545e3872760ab7\"),Gy:BigInt(\"0x3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f\")},Lo={p:BigInt(\"0x1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"),n:BigInt(\"0x01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa51868783bf2f966b7fcc0148f709a5d03bb5c9b8899c47aebb6fb71e91386409\"),h:BigInt(1),a:BigInt(\"0x1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\"),b:BigInt(\"0x0051953eb9618e1c9a1f929a21a0b68540eea2da725b99b315f3b8b489918ef109e156193951ec7e937b1652c0bd3bb1bf073573df883d2c34f1ef451fd46b503f00\"),Gx:BigInt(\"0x00c6858e06b70404e9cd9e3ecb662395b4429c648139053fb521f828af606b4d3dbaa14b5e77efe75928fe1dc127a2ffa8de3348b3c1856a429bf97e7e31c2e5bd66\"),Gy:BigInt(\"0x011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650\")},jc=Yt($o.p),kc=Yt(Co.p),Pc=Yt(Lo.p),Hc=Rn({...$o,Fp:jc,lowS:!1},Ae);Rn({...Co,Fp:kc,lowS:!1},Yi),Rn({...Lo,Fp:Pc,lowS:!1,allowedPrivateKeyLengths:[130,131,132]},Wi);const Dc=Hc,$n=\"base10\",tt=\"base16\",Qt=\"base64pad\",De=\"base64url\",te=\"utf8\",Cn=0,ee=1,ge=2,Mc=0,jo=1,be=12,Ln=32;function Vc(){const t=Tn.utils.randomPrivateKey(),e=Tn.getPublicKey(t);return{privateKey:(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(t,tt),publicKey:(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e,tt)}}function qc(){const t=Zt(Ln);return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(t,tt)}function Kc(t,e){const n=Tn.getSharedSecret((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(t,tt),(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e,tt)),r=Jf(Te,n,void 0,void 0,Ln);return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(r,tt)}function Fc(t){const e=Te((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(t,tt));return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e,tt)}function zc(t){const e=Te((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(t,te));return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e,tt)}function jn(t){return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(`${t}`,$n)}function Vt(t){return Number((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(t,$n))}function ko(t){return t.replace(/\\+/g,\"-\").replace(/\\//g,\"_\").replace(/=/g,\"\")}function Po(t){const e=t.replace(/-/g,\"+\").replace(/_/g,\"/\"),n=(4-e.length%4)%4;return e+\"=\".repeat(n)}function Gc(t){const e=jn(typeof t.type<\"u\"?t.type:Cn);if(Vt(e)===ee&&typeof t.senderPublicKey>\"u\")throw new Error(\"Missing sender public key for type 1 envelope\");const n=typeof t.senderPublicKey<\"u\"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(t.senderPublicKey,tt):void 0,r=typeof t.iv<\"u\"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(t.iv,tt):Zt(be),o=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(t.symKey,tt),s=co(o,r).encrypt((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(t.message,te)),i=kn({type:e,sealed:s,iv:r,senderPublicKey:n});return t.encoding===De?ko(i):i}function Zc(t){const e=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(t.symKey,tt),{sealed:n,iv:r}=Me({encoded:t.encoded,encoding:t.encoding}),o=co(e,r).decrypt(n);if(o===null)throw new Error(\"Failed to decrypt\");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(o,te)}function Wc(t,e){const n=jn(ge),r=Zt(be),o=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(t,te),s=kn({type:n,sealed:o,iv:r});return e===De?ko(s):s}function Yc(t,e){const{sealed:n}=Me({encoded:t,encoding:e});return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(n,te)}function kn(t){if(Vt(t.type)===ge)return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.concat)([t.type,t.sealed]),Qt);if(Vt(t.type)===ee){if(typeof t.senderPublicKey>\"u\")throw new Error(\"Missing sender public key for type 1 envelope\");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.concat)([t.type,t.senderPublicKey,t.iv,t.sealed]),Qt)}return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.concat)([t.type,t.iv,t.sealed]),Qt)}function Me(t){const e=(t.encoding||Qt)===De?Po(t.encoded):t.encoded,n=(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e,Qt),r=n.slice(Mc,jo),o=jo;if(Vt(r)===ee){const c=o+Ln,u=c+be,a=n.slice(o,c),l=n.slice(c,u),h=n.slice(u);return{type:r,sealed:h,iv:l,senderPublicKey:a}}if(Vt(r)===ge){const c=n.slice(o),u=Zt(be);return{type:r,sealed:c,iv:u}}const s=o+be,i=n.slice(o,s),f=n.slice(s);return{type:r,sealed:f,iv:i}}function Xc(t,e){const n=Me({encoded:t,encoding:e?.encoding});return Ho({type:Vt(n.type),senderPublicKey:typeof n.senderPublicKey<\"u\"?(0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(n.senderPublicKey,tt):void 0,receiverPublicKey:e?.receiverPublicKey})}function Ho(t){const e=t?.type||Cn;if(e===ee){if(typeof t?.senderPublicKey>\"u\")throw new Error(\"missing sender public key\");if(typeof t?.receiverPublicKey>\"u\")throw new Error(\"missing receiver public key\")}return{type:e,senderPublicKey:t?.senderPublicKey,receiverPublicKey:t?.receiverPublicKey}}function Jc(t){return t.type===ee&&typeof t.senderPublicKey==\"string\"&&typeof t.receiverPublicKey==\"string\"}function Qc(t){return t.type===ge}function Do(t){const e=Buffer.from(t.x,\"base64\"),n=Buffer.from(t.y,\"base64\");return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.concat)([new Uint8Array([4]),e,n])}function ta(t,e){const[n,r,o]=t.split(\".\"),s=Buffer.from(Po(o),\"base64\");if(s.length!==64)throw new Error(\"Invalid signature length\");const i=s.slice(0,32),f=s.slice(32,64),c=`${n}.${r}`,u=Te(c),a=Do(e);if(!Dc.verify((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.concat)([i,f]),u,a))throw new Error(\"Invalid signature\");return (0,_walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_4__.decodeJWT)(t).payload}const Mo=\"irn\";function ea(t){return t?.relay||{protocol:Mo}}function na(t){const e=_walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_6__.RELAY_JSONRPC[t];if(typeof e>\"u\")throw new Error(`Relay Protocol not supported: ${t}`);return e}function Vo(t,e=\"-\"){const n={},r=\"relay\"+e;return Object.keys(t).forEach(o=>{if(o.startsWith(r)){const s=o.replace(r,\"\"),i=t[o];n[s]=i}}),n}function ra(t){if(!t.includes(\"wc:\")){const u=Qe(t);u!=null&&u.includes(\"wc:\")&&(t=u)}t=t.includes(\"wc://\")?t.replace(\"wc://\",\"\"):t,t=t.includes(\"wc:\")?t.replace(\"wc:\",\"\"):t;const e=t.indexOf(\":\"),n=t.indexOf(\"?\")!==-1?t.indexOf(\"?\"):void 0,r=t.substring(0,e),o=t.substring(e+1,n).split(\"@\"),s=typeof n<\"u\"?t.substring(n):\"\",i=new URLSearchParams(s),f={};i.forEach((u,a)=>{f[a]=u});const c=typeof f.methods==\"string\"?f.methods.split(\",\"):void 0;return{protocol:r,topic:qo(o[0]),version:parseInt(o[1],10),symKey:f.symKey,relay:Vo(f),methods:c,expiryTimestamp:f.expiryTimestamp?parseInt(f.expiryTimestamp,10):void 0}}function qo(t){return t.startsWith(\"//\")?t.substring(2):t}function Ko(t,e=\"-\"){const n=\"relay\",r={};return Object.keys(t).forEach(o=>{const s=o,i=n+e+s;t[s]&&(r[i]=t[s])}),r}function oa(t){const e=new URLSearchParams,n=Ko(t.relay);Object.keys(n).sort().forEach(o=>{e.set(o,n[o])}),e.set(\"symKey\",t.symKey),t.expiryTimestamp&&e.set(\"expiryTimestamp\",t.expiryTimestamp.toString()),t.methods&&e.set(\"methods\",t.methods.join(\",\"));const r=e.toString();return`${t.protocol}:${t.topic}@${t.version}?${r}`}function sa(t,e,n){return`${t}?wc_ev=${n}&topic=${e}`}var ia=Object.defineProperty,fa=Object.defineProperties,ca=Object.getOwnPropertyDescriptors,Fo=Object.getOwnPropertySymbols,aa=Object.prototype.hasOwnProperty,ua=Object.prototype.propertyIsEnumerable,zo=(t,e,n)=>e in t?ia(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,la=(t,e)=>{for(var n in e||(e={}))aa.call(e,n)&&zo(t,n,e[n]);if(Fo)for(var n of Fo(e))ua.call(e,n)&&zo(t,n,e[n]);return t},da=(t,e)=>fa(t,ca(e));function qt(t){const e=[];return t.forEach(n=>{const[r,o]=n.split(\":\");e.push(`${r}:${o}`)}),e}function Go(t){const e=[];return Object.values(t).forEach(n=>{e.push(...qt(n.accounts))}),e}function Zo(t,e){const n=[];return Object.values(t).forEach(r=>{qt(r.accounts).includes(e)&&n.push(...r.methods)}),n}function Wo(t,e){const n=[];return Object.values(t).forEach(r=>{qt(r.accounts).includes(e)&&n.push(...r.events)}),n}function ha(t,e){const n=is(t,e);if(n)throw new Error(n.message);const r={};for(const[o,s]of Object.entries(t))r[o]={methods:s.methods,events:s.events,chains:s.accounts.map(i=>`${i.split(\":\")[0]}:${i.split(\":\")[1]}`)};return r}function pa(t){const{proposal:{requiredNamespaces:e,optionalNamespaces:n={}},supportedNamespaces:r}=t,o=ye(e),s=ye(n),i={};Object.keys(r).forEach(u=>{const a=r[u].chains,l=r[u].methods,h=r[u].events,g=r[u].accounts;a.forEach(m=>{if(!g.some(b=>b.includes(m)))throw new Error(`No accounts provided for chain ${m} in namespace ${u}`)}),i[u]={chains:a,methods:l,events:h,accounts:g}});const f=cs(e,i,\"approve()\");if(f)throw new Error(f.message);const c={};return!Object.keys(e).length&&!Object.keys(n).length?i:(Object.keys(o).forEach(u=>{const a=r[u].chains.filter(m=>{var b,v;return(v=(b=o[u])==null?void 0:b.chains)==null?void 0:v.includes(m)}),l=r[u].methods.filter(m=>{var b,v;return(v=(b=o[u])==null?void 0:b.methods)==null?void 0:v.includes(m)}),h=r[u].events.filter(m=>{var b,v;return(v=(b=o[u])==null?void 0:b.events)==null?void 0:v.includes(m)}),g=a.map(m=>r[u].accounts.filter(b=>b.includes(`${m}:`))).flat();c[u]={chains:a,methods:l,events:h,accounts:g}}),Object.keys(s).forEach(u=>{var a,l,h,g,m,b;if(!r[u])return;const v=(l=(a=s[u])==null?void 0:a.chains)==null?void 0:l.filter(H=>r[u].chains.includes(H)),L=r[u].methods.filter(H=>{var _,k;return(k=(_=s[u])==null?void 0:_.methods)==null?void 0:k.includes(H)}),V=r[u].events.filter(H=>{var _,k;return(k=(_=s[u])==null?void 0:_.events)==null?void 0:k.includes(H)}),C=v?.map(H=>r[u].accounts.filter(_=>_.includes(`${H}:`))).flat();c[u]={chains:ct((h=c[u])==null?void 0:h.chains,v),methods:ct((g=c[u])==null?void 0:g.methods,L),events:ct((m=c[u])==null?void 0:m.events,V),accounts:ct((b=c[u])==null?void 0:b.accounts,C)}}),c)}function Pn(t){return t.includes(\":\")}function Yo(t){return Pn(t)?t.split(\":\")[0]:t}function ye(t){var e,n,r;const o={};if(!Ve(t))return o;for(const[s,i]of Object.entries(t)){const f=Pn(s)?[s]:i.chains,c=i.methods||[],u=i.events||[],a=Yo(s);o[a]=da(la({},o[a]),{chains:ct(f,(e=o[a])==null?void 0:e.chains),methods:ct(c,(n=o[a])==null?void 0:n.methods),events:ct(u,(r=o[a])==null?void 0:r.events)})}return o}function Xo(t){const e={};return t?.forEach(n=>{var r;const[o,s]=n.split(\":\");e[o]||(e[o]={accounts:[],chains:[],events:[],methods:[]}),e[o].accounts.push(n),(r=e[o].chains)==null||r.push(`${o}:${s}`)}),e}function ga(t,e){e=e.map(r=>r.replace(\"did:pkh:\",\"\"));const n=Xo(e);for(const[r,o]of Object.entries(n))o.methods?o.methods=ct(o.methods,t):o.methods=t,o.events=[\"chainChanged\",\"accountsChanged\"];return n}function ba(t,e){var n,r,o,s,i,f;const c=ye(t),u=ye(e),a={},l=Object.keys(c).concat(Object.keys(u));for(const h of l)a[h]={chains:ct((n=c[h])==null?void 0:n.chains,(r=u[h])==null?void 0:r.chains),methods:ct((o=c[h])==null?void 0:o.methods,(s=u[h])==null?void 0:s.methods),events:ct((i=c[h])==null?void 0:i.events,(f=u[h])==null?void 0:f.events)};return a}const Jo={INVALID_METHOD:{message:\"Invalid method.\",code:1001},INVALID_EVENT:{message:\"Invalid event.\",code:1002},INVALID_UPDATE_REQUEST:{message:\"Invalid update request.\",code:1003},INVALID_EXTEND_REQUEST:{message:\"Invalid extend request.\",code:1004},INVALID_SESSION_SETTLE_REQUEST:{message:\"Invalid session settle request.\",code:1005},UNAUTHORIZED_METHOD:{message:\"Unauthorized method.\",code:3001},UNAUTHORIZED_EVENT:{message:\"Unauthorized event.\",code:3002},UNAUTHORIZED_UPDATE_REQUEST:{message:\"Unauthorized update request.\",code:3003},UNAUTHORIZED_EXTEND_REQUEST:{message:\"Unauthorized extend request.\",code:3004},USER_REJECTED:{message:\"User rejected.\",code:5e3},USER_REJECTED_CHAINS:{message:\"User rejected chains.\",code:5001},USER_REJECTED_METHODS:{message:\"User rejected methods.\",code:5002},USER_REJECTED_EVENTS:{message:\"User rejected events.\",code:5003},UNSUPPORTED_CHAINS:{message:\"Unsupported chains.\",code:5100},UNSUPPORTED_METHODS:{message:\"Unsupported methods.\",code:5101},UNSUPPORTED_EVENTS:{message:\"Unsupported events.\",code:5102},UNSUPPORTED_ACCOUNTS:{message:\"Unsupported accounts.\",code:5103},UNSUPPORTED_NAMESPACE_KEY:{message:\"Unsupported namespace key.\",code:5104},USER_DISCONNECTED:{message:\"User disconnected.\",code:6e3},SESSION_SETTLEMENT_FAILED:{message:\"Session settlement failed.\",code:7e3},WC_METHOD_UNSUPPORTED:{message:\"Unsupported wc_ method.\",code:10001}},Qo={NOT_INITIALIZED:{message:\"Not initialized.\",code:1},NO_MATCHING_KEY:{message:\"No matching key.\",code:2},RESTORE_WILL_OVERRIDE:{message:\"Restore will override.\",code:3},RESUBSCRIBED:{message:\"Resubscribed.\",code:4},MISSING_OR_INVALID:{message:\"Missing or invalid.\",code:5},EXPIRED:{message:\"Expired.\",code:6},UNKNOWN_TYPE:{message:\"Unknown type.\",code:7},MISMATCHED_TOPIC:{message:\"Mismatched topic.\",code:8},NON_CONFORMING_NAMESPACES:{message:\"Non conforming namespaces.\",code:9}};function Et(t,e){const{message:n,code:r}=Qo[t];return{message:e?`${n} ${e}`:n,code:r}}function Kt(t,e){const{message:n,code:r}=Jo[t];return{message:e?`${n} ${e}`:n,code:r}}function me(t,e){return Array.isArray(t)?typeof e<\"u\"&&t.length?t.every(e):!0:!1}function Ve(t){return Object.getPrototypeOf(t)===Object.prototype&&Object.keys(t).length}function kt(t){return typeof t>\"u\"}function it(t,e){return e&&kt(t)?!0:typeof t==\"string\"&&!!t.trim().length}function qe(t,e){return e&&kt(t)?!0:typeof t==\"number\"&&!isNaN(t)}function ya(t,e){const{requiredNamespaces:n}=e,r=Object.keys(t.namespaces),o=Object.keys(n);let s=!0;return It(o,r)?(r.forEach(i=>{const{accounts:f,methods:c,events:u}=t.namespaces[i],a=qt(f),l=n[i];(!It(ve(i,l),a)||!It(l.methods,c)||!It(l.events,u))&&(s=!1)}),s):!1}function we(t){return it(t,!1)&&t.includes(\":\")?t.split(\":\").length===2:!1}function ts(t){if(it(t,!1)&&t.includes(\":\")){const e=t.split(\":\");if(e.length===3){const n=e[0]+\":\"+e[1];return!!e[2]&&we(n)}}return!1}function ma(t){function e(n){try{return typeof new URL(n)<\"u\"}catch{return!1}}try{if(it(t,!1)){if(e(t))return!0;const n=Qe(t);return e(n)}}catch{}return!1}function wa(t){var e;return(e=t?.proposer)==null?void 0:e.publicKey}function xa(t){return t?.topic}function va(t,e){let n=null;return it(t?.publicKey,!1)||(n=Et(\"MISSING_OR_INVALID\",`${e} controller public key should be a string`)),n}function Hn(t){let e=!0;return me(t)?t.length&&(e=t.every(n=>it(n,!1))):e=!1,e}function es(t,e,n){let r=null;return me(e)&&e.length?e.forEach(o=>{r||we(o)||(r=Kt(\"UNSUPPORTED_CHAINS\",`${n}, chain ${o} should be a string and conform to \"namespace:chainId\" format`))}):we(t)||(r=Kt(\"UNSUPPORTED_CHAINS\",`${n}, chains must be defined as \"namespace:chainId\" e.g. \"eip155:1\": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: [\"eip155:1\", \"eip155:5\"] }`)),r}function ns(t,e,n){let r=null;return Object.entries(t).forEach(([o,s])=>{if(r)return;const i=es(o,ve(o,s),`${e} ${n}`);i&&(r=i)}),r}function rs(t,e){let n=null;return me(t)?t.forEach(r=>{n||ts(r)||(n=Kt(\"UNSUPPORTED_ACCOUNTS\",`${e}, account ${r} should be a string and conform to \"namespace:chainId:address\" format`))}):n=Kt(\"UNSUPPORTED_ACCOUNTS\",`${e}, accounts should be an array of strings conforming to \"namespace:chainId:address\" format`),n}function os(t,e){let n=null;return Object.values(t).forEach(r=>{if(n)return;const o=rs(r?.accounts,`${e} namespace`);o&&(n=o)}),n}function ss(t,e){let n=null;return Hn(t?.methods)?Hn(t?.events)||(n=Kt(\"UNSUPPORTED_EVENTS\",`${e}, events should be an array of strings or empty array for no events`)):n=Kt(\"UNSUPPORTED_METHODS\",`${e}, methods should be an array of strings or empty array for no methods`),n}function Dn(t,e){let n=null;return Object.values(t).forEach(r=>{if(n)return;const o=ss(r,`${e}, namespace`);o&&(n=o)}),n}function Ea(t,e,n){let r=null;if(t&&Ve(t)){const o=Dn(t,e);o&&(r=o);const s=ns(t,e,n);s&&(r=s)}else r=Et(\"MISSING_OR_INVALID\",`${e}, ${n} should be an object with data`);return r}function is(t,e){let n=null;if(t&&Ve(t)){const r=Dn(t,e);r&&(n=r);const o=os(t,e);o&&(n=o)}else n=Et(\"MISSING_OR_INVALID\",`${e}, namespaces should be an object with data`);return n}function fs(t){return it(t.protocol,!0)}function Ba(t,e){let n=!1;return e&&!t?n=!0:t&&me(t)&&t.length&&t.forEach(r=>{n=fs(r)}),n}function Ia(t){return typeof t==\"number\"}function Aa(t){return typeof t<\"u\"&&typeof t!==null}function Sa(t){return!(!t||typeof t!=\"object\"||!t.code||!qe(t.code,!1)||!t.message||!it(t.message,!1))}function Na(t){return!(kt(t)||!it(t.method,!1))}function Oa(t){return!(kt(t)||kt(t.result)&&kt(t.error)||!qe(t.id,!1)||!it(t.jsonrpc,!1))}function Ua(t){return!(kt(t)||!it(t.name,!1))}function _a(t,e){return!(!we(e)||!Go(t).includes(e))}function Ta(t,e,n){return it(n,!1)?Zo(t,e).includes(n):!1}function Ra(t,e,n){return it(n,!1)?Wo(t,e).includes(n):!1}function cs(t,e,n){let r=null;const o=$a(t),s=Ca(e),i=Object.keys(o),f=Object.keys(s),c=as(Object.keys(t)),u=as(Object.keys(e)),a=c.filter(l=>!u.includes(l));return a.length&&(r=Et(\"NON_CONFORMING_NAMESPACES\",`${n} namespaces keys don't satisfy requiredNamespaces.\n      Required: ${a.toString()}\n      Received: ${Object.keys(e).toString()}`)),It(i,f)||(r=Et(\"NON_CONFORMING_NAMESPACES\",`${n} namespaces chains don't satisfy required namespaces.\n      Required: ${i.toString()}\n      Approved: ${f.toString()}`)),Object.keys(e).forEach(l=>{if(!l.includes(\":\")||r)return;const h=qt(e[l].accounts);h.includes(l)||(r=Et(\"NON_CONFORMING_NAMESPACES\",`${n} namespaces accounts don't satisfy namespace accounts for ${l}\n        Required: ${l}\n        Approved: ${h.toString()}`))}),i.forEach(l=>{r||(It(o[l].methods,s[l].methods)?It(o[l].events,s[l].events)||(r=Et(\"NON_CONFORMING_NAMESPACES\",`${n} namespaces events don't satisfy namespace events for ${l}`)):r=Et(\"NON_CONFORMING_NAMESPACES\",`${n} namespaces methods don't satisfy namespace methods for ${l}`))}),r}function $a(t){const e={};return Object.keys(t).forEach(n=>{var r;n.includes(\":\")?e[n]=t[n]:(r=t[n].chains)==null||r.forEach(o=>{e[o]={methods:t[n].methods,events:t[n].events}})}),e}function as(t){return[...new Set(t.map(e=>e.includes(\":\")?e.split(\":\")[0]:e))]}function Ca(t){const e={};return Object.keys(t).forEach(n=>{if(n.includes(\":\"))e[n]=t[n];else{const r=qt(t[n].accounts);r?.forEach(o=>{e[o]={accounts:t[n].accounts.filter(s=>s.includes(`${o}:`)),methods:t[n].methods,events:t[n].events}})}}),e}function La(t,e){return qe(t,!1)&&t<=e.max&&t>=e.min}function ja(){const t=Pt();return new Promise(e=>{switch(t){case J.browser:e(us());break;case J.reactNative:e(ls());break;case J.node:e(ds());break;default:e(!0)}})}function us(){return zt()&&navigator?.onLine}async function ls(){if(Bt()&&typeof global<\"u\"&&global!=null&&global.NetInfo){const t=await(global==null?void 0:global.NetInfo.fetch());return t?.isConnected}return!0}function ds(){return!0}function ka(t){switch(Pt()){case J.browser:hs(t);break;case J.reactNative:ps(t);break;case J.node:break}}function hs(t){!Bt()&&zt()&&(window.addEventListener(\"online\",()=>t(!0)),window.addEventListener(\"offline\",()=>t(!1)))}function ps(t){Bt()&&typeof global<\"u\"&&global!=null&&global.NetInfo&&global?.NetInfo.addEventListener(e=>t(e?.isConnected))}function Pa(){var t;return zt()&&(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)()?((t=(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)())==null?void 0:t.visibilityState)===\"visible\":!0}const Mn={};class Ha{static get(e){return Mn[e]}static set(e,n){Mn[e]=n}static delete(e){delete Mn[e]}}function gs(t){const e=bs58__WEBPACK_IMPORTED_MODULE_3__[\"default\"].decode(t);if(e.length<33)throw new Error(\"Too short to contain a public key\");return e.slice(1,33)}function bs({publicKey:t,signature:e,payload:n}){var r;const o=Vn(n.method),s=128|parseInt(((r=n.version)==null?void 0:r.toString())||\"4\"),i=Ma(n.address),f=n.era===\"00\"?new Uint8Array([0]):Vn(n.era);if(f.length!==1&&f.length!==2)throw new Error(\"Invalid era length\");const c=parseInt(n.nonce,16),u=new Uint8Array([c&255,c>>8&255]),a=BigInt(`0x${Da(n.tip)}`),l=qa(a),h=new Uint8Array([0,...t,i,...e,...f,...u,...l,...o]),g=Va(h.length+1);return new Uint8Array([...g,s,...h])}function ys(t){const e=Vn(t),n=(0,blakejs__WEBPACK_IMPORTED_MODULE_7__.blake2b)(e,void 0,32);return\"0x\"+Buffer.from(n).toString(\"hex\")}function Vn(t){return new Uint8Array(t.replace(/^0x/,\"\").match(/.{1,2}/g).map(e=>parseInt(e,16)))}function Da(t){return t.startsWith(\"0x\")?t.slice(2):t}function Ma(t){const e=bs58__WEBPACK_IMPORTED_MODULE_3__[\"default\"].decode(t)[0];return e===42?0:e===60?2:1}function Va(t){if(t<64)return new Uint8Array([t<<2]);if(t<16384){const e=t<<2|1;return new Uint8Array([e&255,e>>8&255])}else if(t<1<<30){const e=t<<2|2;return new Uint8Array([e&255,e>>8&255,e>>16&255,e>>24&255])}else throw new Error(\"Compact encoding > 2^30 not supported\")}function qa(t){if(t<BigInt(1)<<BigInt(6))return new Uint8Array([Number(t<<BigInt(2))]);if(t<BigInt(1)<<BigInt(14)){const e=t<<BigInt(2)|BigInt(1);return new Uint8Array([Number(e&BigInt(255)),Number(e>>BigInt(8)&BigInt(255))])}else if(t<BigInt(1)<<BigInt(30)){const e=t<<BigInt(2)|BigInt(2);return new Uint8Array([Number(e&BigInt(255)),Number(e>>BigInt(8)&BigInt(255)),Number(e>>BigInt(16)&BigInt(255)),Number(e>>BigInt(24)&BigInt(255))])}else throw new Error(\"BigInt compact encoding not supported > 2^30\")}function Ka(t){const e=Uint8Array.from(Buffer.from(t.signature,\"hex\")),n=gs(t.transaction.address),r=bs({publicKey:n,signature:e,payload:t.transaction}),o=Buffer.from(r).toString(\"hex\");return ys(o)}\n//# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@walletconnect+utils@2.21.4_typescript@5.9.2_zod@3.25.75/node_modules/@walletconnect/utils/dist/index.es.js\n");

/***/ })

};
;